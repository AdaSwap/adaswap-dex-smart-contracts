{
  "contractName": "AdaswapFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "feeTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "feeToSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "allPairsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pairCodeHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeTo",
          "type": "address"
        }
      ],
      "name": "setFeeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "name": "setFeeToSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pairCodeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/AdaswapFactory.sol\":\"AdaswapFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":999999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"project:/contracts/AdaswapERC20.sol\":{\"keccak256\":\"0x59ce6ea140c71eab6bf9455b7d66d324a839ff808fab1b95717b27a57779e952\",\"urls\":[\"bzz-raw://c279e8e60646bd21a6fd94c86bcd105159b9aeb21effe66b7b49cf86a2889955\",\"dweb:/ipfs/QmRjSJNfs2EAT6bzgiqqaxiS96VY9vkwqLYaycgHRrJq5M\"]},\"project:/contracts/AdaswapFactory.sol\":{\"keccak256\":\"0x65d36bac54c27a56636e16c7dcd6f8602384e51d96aab277e447006494285690\",\"urls\":[\"bzz-raw://418ad101d3185433d20ecb464e7217fcdfab24638e946deb8fd31ec73c47bc11\",\"dweb:/ipfs/Qma8qdduxAV4yMXqjiCpgm5mjfnWtVKVUBd4i2XfqZbqFR\"]},\"project:/contracts/AdaswapPair.sol\":{\"keccak256\":\"0xe67387df18bd0a6b4bbf7e22f5c062a0dddf386ba464c34c9b581e4287b6dacc\",\"urls\":[\"bzz-raw://5aa7ec614f206c474a49696e58c6e03a42156d27b88af196219210441b4e6968\",\"dweb:/ipfs/QmVWXPVWkgct38bNeYPGJR55HTmgvtXHUXGLTL8rGP68VD\"]},\"project:/contracts/interfaces/IAdaswapCallee.sol\":{\"keccak256\":\"0xd8f6f1c4adfc640fc8bcc2f3b9c4716a4281968321ac0ec3dcac6cadb507cd65\",\"urls\":[\"bzz-raw://f0332c92160483ad22a2207083b21c888b9a95e102868cf8a5cc51e4d42f643f\",\"dweb:/ipfs/QmV6YCKzmHPY6zbmFQsEQaYayNpR8rqf5MDRteAceARJJs\"]},\"project:/contracts/interfaces/IAdaswapERC20.sol\":{\"keccak256\":\"0x0c6a33d2eccf927f71898b4c67825bd1725006d848ccd92aec657f2389dd2cec\",\"urls\":[\"bzz-raw://7e62baaca659f3d45b69e6fbc4ae0d9431526d1b19f2384db6676eb7cd2fa977\",\"dweb:/ipfs/QmXiNZ3JLJH1Lc3698ifSWb8nsLVUzo9MKqAUYB5fSPErA\"]},\"project:/contracts/interfaces/IAdaswapFactory.sol\":{\"keccak256\":\"0x25888717ac3f441aad6457a602739b64b0bd1588ca773162596639a898f89685\",\"urls\":[\"bzz-raw://9b4d6c12217eba28b6c4e502eda40709dbca0267d82083286cfbc560ff19ad15\",\"dweb:/ipfs/QmbZ3MmcZkskL46wJcG4jXDPUA8suz5VsenaV14wNbry1v\"]},\"project:/contracts/interfaces/IAdaswapPair.sol\":{\"keccak256\":\"0x8206dcee88d27c62a8eba7af8ef9fca4c05ad53f31430aec47ff381b3f3bb2c3\",\"urls\":[\"bzz-raw://9c22f59a3c8c89483eebc3be74c20673b67efa69048b235566de2da7dd2c5def\",\"dweb:/ipfs/QmcHXVoqK3WS3NRNYpG2YeHLeqXWSh5nq41zxD2Xt68k8m\"]},\"project:/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xad18681cc68c47cf2dc732ef3a7d1367b062ca8589104ed826722c7d9c84afc2\",\"urls\":[\"bzz-raw://16bac4f8bf9bec06edbbb1caddf944fa928d25afa2e270c1b2bdc20dddcbe4d6\",\"dweb:/ipfs/QmfQzu3Y7WzfTJaZJhL6PM6V6CnvWoz3twfTn9BXPLsMh2\"]},\"project:/contracts/libraries/Math.sol\":{\"keccak256\":\"0x7af1b5c7458b3acd5a1f92788e691a3c6ebd837c209d8d3b7434748773d6f51f\",\"urls\":[\"bzz-raw://4002ca81d037f9c1fcbb71f503eb8e1f047490ee36f07671bd03813aac66b671\",\"dweb:/ipfs/QmPgcapubbAZasSX9gwHxrsD39a9KP45mvD3L1UwvEmWsR\"]},\"project:/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x074788d9d4230f05c250f680ca7240c6b5f74e5eb7f3942d403a3b2587469f3a\",\"urls\":[\"bzz-raw://3ff52932e4ea59d87558bf7169364f27b4ea22557f79df55b53d9ff3d859f28b\",\"dweb:/ipfs/QmSMsEByM2DYpJByyNHJWhdbg5ms1uoUNZ7BvLCiKDNB5Q\"]},\"project:/contracts/libraries/UQ112x112.sol\":{\"keccak256\":\"0x58ba835f1603c5dbd1489ce6474f175f247ebe4e72c28ade17d1a92726232b5b\",\"urls\":[\"bzz-raw://c9c61502ec9a347ea947073ce4317d8789c00ad886ce6fb7853aeef527afb45b\",\"dweb:/ipfs/QmR6K6CkVMD6VuHumGdpeucMpZoLAoXvU7HCJn3pEbrb7p\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051620052b4380380620052b4833981810160405281019061003491906100de565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061010b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ab82610080565b9050919050565b6100bb816100a0565b81146100c657600080fd5b50565b6000815190506100d8816100b2565b92915050565b6000602082840312156100f4576100f361007b565b5b6000610102848285016100c9565b91505092915050565b615199806200011b6000396000f3fe60806040523480156200001157600080fd5b5060043610620000b25760003560e01c80639aab92481162000081578063c9c653961162000063578063c9c653961462000195578063e6a4390514620001cb578063f46901ed146200020157620000b2565b80639aab92481462000153578063a2e74af6146200017557620000b2565b8063017e7e5814620000b7578063094b741514620000d95780631e3dd18b14620000fb578063574f2ba31462000131575b600080fd5b620000c162000221565b604051620000d0919062000a8e565b60405180910390f35b620000e362000245565b604051620000f2919062000a8e565b60405180910390f35b62000119600480360381019062000113919062000aeb565b6200026b565b60405162000128919062000a8e565b60405180910390f35b6200013b620002ab565b6040516200014a919062000b2e565b60405180910390f35b6200015d620002b8565b6040516200016c919062000b66565b60405180910390f35b6200019360048036038101906200018d919062000bb4565b620002ec565b005b620001b36004803603810190620001ad919062000be6565b620003c3565b604051620001c2919062000a8e565b60405180910390f35b620001e96004803603810190620001e3919062000be6565b62000923565b604051620001f8919062000a8e565b60405180910390f35b6200021f600480360381019062000219919062000bb4565b62000965565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600381815481106200027c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600380549050905090565b600060405180602001620002cc9062000a3b565b6020820181038252601f19601f8201166040525080519060200120905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200037f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003769062000c8e565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160362000436576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200042d9062000d00565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106200047557838562000478565b84845b91509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620004ee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004e59062000d72565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614620005fc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005f39062000de4565b60405180910390fd5b600060405180602001620006109062000a3b565b6020820181038252601f19601f820116604052509050600083836040516020016200063d92919062000e56565b604051602081830303815290604052805190602001209050808251602084016000f594508473ffffffffffffffffffffffffffffffffffffffff1663485cc95585856040518363ffffffff1660e01b81526004016200069e92919062000e86565b600060405180830381600087803b158015620006b957600080fd5b505af1158015620006ce573d6000803e3d6000fd5b5050505084600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9876003805490506040516200091192919062000eb3565b60405180910390a35050505092915050565b60026020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620009f8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620009ef9062000c8e565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6142838062000ee183390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000a768262000a49565b9050919050565b62000a888162000a69565b82525050565b600060208201905062000aa5600083018462000a7d565b92915050565b600080fd5b6000819050919050565b62000ac58162000ab0565b811462000ad157600080fd5b50565b60008135905062000ae58162000aba565b92915050565b60006020828403121562000b045762000b0362000aab565b5b600062000b148482850162000ad4565b91505092915050565b62000b288162000ab0565b82525050565b600060208201905062000b45600083018462000b1d565b92915050565b6000819050919050565b62000b608162000b4b565b82525050565b600060208201905062000b7d600083018462000b55565b92915050565b62000b8e8162000a69565b811462000b9a57600080fd5b50565b60008135905062000bae8162000b83565b92915050565b60006020828403121562000bcd5762000bcc62000aab565b5b600062000bdd8482850162000b9d565b91505092915050565b6000806040838503121562000c005762000bff62000aab565b5b600062000c108582860162000b9d565b925050602062000c238582860162000b9d565b9150509250929050565b600082825260208201905092915050565b7f416461737761703a20464f5242494444454e0000000000000000000000000000600082015250565b600062000c7660128362000c2d565b915062000c838262000c3e565b602082019050919050565b6000602082019050818103600083015262000ca98162000c67565b9050919050565b7f416461737761703a204944454e544943414c5f41444452455353455300000000600082015250565b600062000ce8601c8362000c2d565b915062000cf58262000cb0565b602082019050919050565b6000602082019050818103600083015262000d1b8162000cd9565b9050919050565b7f416461737761703a205a45524f5f414444524553530000000000000000000000600082015250565b600062000d5a60158362000c2d565b915062000d678262000d22565b602082019050919050565b6000602082019050818103600083015262000d8d8162000d4b565b9050919050565b7f416461737761703a20504149525f455849535453000000000000000000000000600082015250565b600062000dcc60148362000c2d565b915062000dd98262000d94565b602082019050919050565b6000602082019050818103600083015262000dff8162000dbd565b9050919050565b60008160601b9050919050565b600062000e208262000e06565b9050919050565b600062000e348262000e13565b9050919050565b62000e5062000e4a8262000a69565b62000e27565b82525050565b600062000e64828562000e3b565b60148201915062000e76828462000e3b565b6014820191508190509392505050565b600060408201905062000e9d600083018562000a7d565b62000eac602083018462000a7d565b9392505050565b600060408201905062000eca600083018562000a7d565b62000ed9602083018462000b1d565b939250505056fe60806040526001600c553480156200001657600080fd5b5060004690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280601081526020017f41646173776170204c5020546f6b656e00000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001620000cf959493929190620001ae565b604051602081830303815290604052805190602001206003819055505033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200020b565b6000819050919050565b620001488162000133565b82525050565b6000819050919050565b62000163816200014e565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001968262000169565b9050919050565b620001a88162000189565b82525050565b600060a082019050620001c560008301886200013d565b620001d460208301876200013d565b620001e360408301866200013d565b620001f2606083018562000158565b6200020160808301846200019d565b9695505050505050565b614068806200021b6000396000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a7146104eb578063d505accf14610509578063dd62ed3e14610525578063fff6cae914610555576101b9565b8063ba9a7a5614610493578063bc25cf77146104b1578063c45a0155146104cd576101b9565b80637ecebe00116100d35780637ecebe00146103e457806389afcb441461041457806395d89b4114610445578063a9059cbb14610463576101b9565b80636a6278421461036657806370a08231146103965780637464fc3d146103c6576101b9565b806323b872dd116101665780633644e515116101405780633644e515146102f0578063485cc9551461030e5780635909c0d51461032a5780635a3d549314610348576101b9565b806323b872dd1461028457806330adf81f146102b4578063313ce567146102d2576101b9565b8063095ea7b311610197578063095ea7b3146102185780630dfe16811461024857806318160ddd14610266576101b9565b8063022c0d9f146101be57806306fdde03146101da5780630902f1ac146101f8575b600080fd5b6101d860048036038101906101d39190612d6f565b61055f565b005b6101e2610bb1565b6040516101ef9190612e90565b60405180910390f35b610200610bea565b60405161020f93929190612efa565b60405180910390f35b610232600480360381019061022d9190612f31565b610c47565b60405161023f9190612f8c565b60405180910390f35b610250610c5e565b60405161025d9190612fb6565b60405180910390f35b61026e610c84565b60405161027b9190612fe0565b60405180910390f35b61029e60048036038101906102999190612ffb565b610c8a565b6040516102ab9190612f8c565b60405180910390f35b6102bc610e55565b6040516102c99190613067565b60405180910390f35b6102da610e7c565b6040516102e7919061309e565b60405180910390f35b6102f8610e81565b6040516103059190613067565b60405180910390f35b610328600480360381019061032391906130b9565b610e87565b005b610332610f9d565b60405161033f9190612fe0565b60405180910390f35b610350610fa3565b60405161035d9190612fe0565b60405180910390f35b610380600480360381019061037b91906130f9565b610fa9565b60405161038d9190612fe0565b60405180910390f35b6103b060048036038101906103ab91906130f9565b611392565b6040516103bd9190612fe0565b60405180910390f35b6103ce6113aa565b6040516103db9190612fe0565b60405180910390f35b6103fe60048036038101906103f991906130f9565b6113b0565b60405161040b9190612fe0565b60405180910390f35b61042e600480360381019061042991906130f9565b6113c8565b60405161043c929190613126565b60405180910390f35b61044d611872565b60405161045a9190612e90565b60405180910390f35b61047d60048036038101906104789190612f31565b6118ab565b60405161048a9190612f8c565b60405180910390f35b61049b6118c2565b6040516104a89190612fe0565b60405180910390f35b6104cb60048036038101906104c691906130f9565b6118c8565b005b6104d5611af4565b6040516104e29190612fb6565b60405180910390f35b6104f3611b1a565b6040516105009190612fb6565b60405180910390f35b610523600480360381019061051e91906131a7565b611b40565b005b61053f600480360381019061053a91906130b9565b611d68565b60405161054c9190612fe0565b60405180910390f35b61055d611d8d565b005b6001600c54146105a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059b90613295565b60405180910390fd5b6000600c8190555060008511806105bb5750600084115b6105fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f190613327565b60405180910390fd5b600080610605610bea565b5091509150816dffffffffffffffffffffffffffff16871080156106385750806dffffffffffffffffffffffffffff1686105b610677576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066e90613393565b60405180910390fd5b6000806000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415801561073057508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b61076f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610766906133ff565b60405180910390fd5b60008b111561078457610783828a8d611f5e565b5b60008a111561079957610798818a8c611f5e565b5b6000888890501115610819578873ffffffffffffffffffffffffffffffffffffffff166331f22e23338d8d8c8c6040518663ffffffff1660e01b81526004016107e695949392919061346c565b600060405180830381600087803b15801561080057600080fd5b505af1158015610814573d6000803e3d6000fd5b505050505b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108529190612fb6565b602060405180830381865afa15801561086f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089391906134cf565b93508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108ce9190612fb6565b602060405180830381865afa1580156108eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090f91906134cf565b92505050600089856dffffffffffffffffffffffffffff16610931919061352b565b831161093e576000610966565b89856dffffffffffffffffffffffffffff1661095a919061352b565b83610965919061352b565b5b9050600089856dffffffffffffffffffffffffffff16610986919061352b565b83116109935760006109bb565b89856dffffffffffffffffffffffffffff166109af919061352b565b836109ba919061352b565b5b905060008211806109cc5750600081115b610a0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a02906135d1565b60405180910390fd5b6000610a47610a246003856120e890919063ffffffff16565b610a396103e8886120e890919063ffffffff16565b61215590919063ffffffff16565b90506000610a85610a626003856120e890919063ffffffff16565b610a776103e8886120e890919063ffffffff16565b61215590919063ffffffff16565b9050610acf620f4240610ac1896dffffffffffffffffffffffffffff168b6dffffffffffffffffffffffffffff166120e890919063ffffffff16565b6120e890919063ffffffff16565b610ae282846120e890919063ffffffff16565b1015610b23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1a9061363d565b60405180910390fd5b5050610b31848488886121ae565b8873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82284848f8f604051610b94949392919061365d565b60405180910390a35050505050506001600c819055505050505050565b6040518060400160405280601081526020017f41646173776170204c5020546f6b656e0000000000000000000000000000000081525081565b6000806000600860009054906101000a90046dffffffffffffffffffffffffffff1692506008600e9054906101000a90046dffffffffffffffffffffffffffff1691506008601c9054906101000a900463ffffffff169050909192565b6000610c543384846124a2565b6001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610e3f57610dbe82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461215590919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610e4a84848461258d565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0e906136ee565b60405180910390fd5b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60095481565b600a5481565b60006001600c5414610ff0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe790613295565b60405180910390fd5b6000600c81905550600080611003610bea565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110659190612fb6565b602060405180830381865afa158015611082573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a691906134cf565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111059190612fb6565b602060405180830381865afa158015611122573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114691906134cf565b9050600061116d856dffffffffffffffffffffffffffff168461215590919063ffffffff16565b90506000611194856dffffffffffffffffffffffffffff168461215590919063ffffffff16565b905060006111a28787612721565b9050600080549050600081036111f5576111e16103e86111d36111ce86886120e890919063ffffffff16565b6128f2565b61215590919063ffffffff16565b98506111f060006103e861296c565b61125c565b611259886dffffffffffffffffffffffffffff1661121c83876120e890919063ffffffff16565b611226919061373d565b886dffffffffffffffffffffffffffff1661124a84876120e890919063ffffffff16565b611254919061373d565b612a86565b98505b6000891161129f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611296906137e0565b60405180910390fd5b6112a98a8a61296c565b6112b586868a8a6121ae565b811561132d576113266008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166120e890919063ffffffff16565b600b819055505b3373ffffffffffffffffffffffffffffffffffffffff167f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f8585604051611375929190613126565b60405180910390a250505050505050506001600c81905550919050565b60016020528060005260406000206000915090505481565b600b5481565b60046020528060005260406000206000915090505481565b6000806001600c5414611410576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140790613295565b60405180910390fd5b6000600c81905550600080611423610bea565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016114b19190612fb6565b602060405180830381865afa1580156114ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f291906134cf565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161152f9190612fb6565b602060405180830381865afa15801561154c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157091906134cf565b90506000600160003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006115c28888612721565b9050600080549050806115de86856120e890919063ffffffff16565b6115e8919061373d565b9a50806115fe85856120e890919063ffffffff16565b611608919061373d565b995060008b11801561161a575060008a115b611659576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165090613872565b60405180910390fd5b6116633084612a9f565b61166e878d8d611f5e565b611679868d8c611f5e565b8673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016116b29190612fb6565b602060405180830381865afa1580156116cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f391906134cf565b94508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161172e9190612fb6565b602060405180830381865afa15801561174b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061176f91906134cf565b935061177d85858b8b6121ae565b81156117f5576117ee6008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166120e890919063ffffffff16565b600b819055505b8b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d819364968d8d604051611854929190613126565b60405180910390a35050505050505050506001600c81905550915091565b6040518060400160405280600381526020017f414c50000000000000000000000000000000000000000000000000000000000081525081565b60006118b833848461258d565b6001905092915050565b6103e881565b6001600c541461190d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190490613295565b60405180910390fd5b6000600c819055506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611a258284611a20600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016119d19190612fb6565b602060405180830381865afa1580156119ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a1291906134cf565b61215590919063ffffffff16565b611f5e565b611ae78184611ae26008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611a939190612fb6565b602060405180830381865afa158015611ab0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad491906134cf565b61215590919063ffffffff16565b611f5e565b50506001600c8190555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b42841015611b83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b7a906138de565b60405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190611bff906138fe565b919050558a604051602001611c1996959493929190613946565b60405160208183030381529060405280519060200120604051602001611c40929190613a1f565b604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051611c7d9493929190613a56565b6020604051602081039080840390855afa158015611c9f573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015611d1357508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611d52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d4990613ae7565b60405180910390fd5b611d5d8989896124a2565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b6001600c5414611dd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dc990613295565b60405180910390fd5b6000600c81905550611f54600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611e389190612fb6565b602060405180830381865afa158015611e55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e7991906134cf565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611ed49190612fb6565b602060405180830381865afa158015611ef1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f1591906134cf565b600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff166121ae565b6001600c81905550565b6000808473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601981526020017f7472616e7366657228616464726573732c75696e743235362900000000000000815250805190602001208585604051602401611fc8929190613b07565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516120329190613b77565b6000604051808303816000865af19150503d806000811461206f576040519150601f19603f3d011682016040523d82523d6000602084013e612074565b606091505b50915091508180156120a257506000815114806120a15750808060200190518101906120a09190613bba565b5b5b6120e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120d890613c33565b60405180910390fd5b5050505050565b6000808214806121105750828283856121019190613c53565b92508261210e919061373d565b145b61214f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161214690613cf9565b60405180910390fd5b92915050565b6000828284612164919061352b565b91508111156121a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161219f90613d65565b60405180910390fd5b92915050565b6dffffffffffffffffffffffffffff801684111580156121de57506dffffffffffffffffffffffffffff80168311155b61221d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161221490613dd1565b60405180910390fd5b6000640100000000426122309190613df1565b905060006008601c9054906101000a900463ffffffff16826122529190613e22565b905060008163ffffffff1611801561227b57506000846dffffffffffffffffffffffffffff1614155b801561229857506000836dffffffffffffffffffffffffffff1614155b1561239e578063ffffffff166122dd856122b186612bb9565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612bed90919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166123059190613c53565b600960008282546123169190613e56565b925050819055508063ffffffff1661235d8461233187612bb9565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612bed90919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166123859190613c53565b600a60008282546123969190613e56565b925050819055505b85600860006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550846008600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550816008601c6101000a81548163ffffffff021916908363ffffffff1602179055507f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff16604051612492929190613eac565b60405180910390a1505050505050565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516125809190612fe0565b60405180910390a3505050565b6125df81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461215590919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061267481600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612c1390919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516127149190612fe0565b60405180910390a3505050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015612791573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127b59190613eea565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141591506000600b54905082156128d857600081146128d357600061283c612837866dffffffffffffffffffffffffffff16886dffffffffffffffffffffffffffff166120e890919063ffffffff16565b6128f2565b90506000612849836128f2565b9050808211156128d057600061287c61286b838561215590919063ffffffff16565b6000546120e890919063ffffffff16565b905060006128a6836128986005876120e890919063ffffffff16565b612c1390919063ffffffff16565b9050600081836128b6919061373d565b905060008111156128cc576128cb878261296c565b5b5050505b50505b6128ea565b600081146128e9576000600b819055505b5b505092915050565b600060038211156129595781905060006001600284612911919061373d565b61291b9190613e56565b90505b81811015612953578091506002818285612938919061373d565b6129429190613e56565b61294c919061373d565b905061291e565b50612967565b6000821461296657600190505b5b919050565b61298181600054612c1390919063ffffffff16565b6000819055506129d981600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612c1390919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612a7a9190612fe0565b60405180910390a35050565b6000818310612a955781612a97565b825b905092915050565b612af181600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461215590919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612b498160005461215590919063ffffffff16565b600081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612bad9190612fe0565b60405180910390a35050565b60006e010000000000000000000000000000826dffffffffffffffffffffffffffff16612be69190613f3f565b9050919050565b6000816dffffffffffffffffffffffffffff1683612c0b9190613f95565b905092915050565b6000828284612c229190613e56565b9150811015612c66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c5d90614012565b60405180910390fd5b92915050565b600080fd5b600080fd5b6000819050919050565b612c8981612c76565b8114612c9457600080fd5b50565b600081359050612ca681612c80565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612cd782612cac565b9050919050565b612ce781612ccc565b8114612cf257600080fd5b50565b600081359050612d0481612cde565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112612d2f57612d2e612d0a565b5b8235905067ffffffffffffffff811115612d4c57612d4b612d0f565b5b602083019150836001820283011115612d6857612d67612d14565b5b9250929050565b600080600080600060808688031215612d8b57612d8a612c6c565b5b6000612d9988828901612c97565b9550506020612daa88828901612c97565b9450506040612dbb88828901612cf5565b935050606086013567ffffffffffffffff811115612ddc57612ddb612c71565b5b612de888828901612d19565b92509250509295509295909350565b600081519050919050565b600082825260208201905092915050565b60005b83811015612e31578082015181840152602081019050612e16565b83811115612e40576000848401525b50505050565b6000601f19601f8301169050919050565b6000612e6282612df7565b612e6c8185612e02565b9350612e7c818560208601612e13565b612e8581612e46565b840191505092915050565b60006020820190508181036000830152612eaa8184612e57565b905092915050565b60006dffffffffffffffffffffffffffff82169050919050565b612ed581612eb2565b82525050565b600063ffffffff82169050919050565b612ef481612edb565b82525050565b6000606082019050612f0f6000830186612ecc565b612f1c6020830185612ecc565b612f296040830184612eeb565b949350505050565b60008060408385031215612f4857612f47612c6c565b5b6000612f5685828601612cf5565b9250506020612f6785828601612c97565b9150509250929050565b60008115159050919050565b612f8681612f71565b82525050565b6000602082019050612fa16000830184612f7d565b92915050565b612fb081612ccc565b82525050565b6000602082019050612fcb6000830184612fa7565b92915050565b612fda81612c76565b82525050565b6000602082019050612ff56000830184612fd1565b92915050565b60008060006060848603121561301457613013612c6c565b5b600061302286828701612cf5565b935050602061303386828701612cf5565b925050604061304486828701612c97565b9150509250925092565b6000819050919050565b6130618161304e565b82525050565b600060208201905061307c6000830184613058565b92915050565b600060ff82169050919050565b61309881613082565b82525050565b60006020820190506130b3600083018461308f565b92915050565b600080604083850312156130d0576130cf612c6c565b5b60006130de85828601612cf5565b92505060206130ef85828601612cf5565b9150509250929050565b60006020828403121561310f5761310e612c6c565b5b600061311d84828501612cf5565b91505092915050565b600060408201905061313b6000830185612fd1565b6131486020830184612fd1565b9392505050565b61315881613082565b811461316357600080fd5b50565b6000813590506131758161314f565b92915050565b6131848161304e565b811461318f57600080fd5b50565b6000813590506131a18161317b565b92915050565b600080600080600080600060e0888a0312156131c6576131c5612c6c565b5b60006131d48a828b01612cf5565b97505060206131e58a828b01612cf5565b96505060406131f68a828b01612c97565b95505060606132078a828b01612c97565b94505060806132188a828b01613166565b93505060a06132298a828b01613192565b92505060c061323a8a828b01613192565b91505092959891949750929550565b7f416461737761703a204c4f434b45440000000000000000000000000000000000600082015250565b600061327f600f83612e02565b915061328a82613249565b602082019050919050565b600060208201905081810360008301526132ae81613272565b9050919050565b7f416461737761703a20494e53554646494349454e545f4f55545055545f414d4f60008201527f554e540000000000000000000000000000000000000000000000000000000000602082015250565b6000613311602383612e02565b915061331c826132b5565b604082019050919050565b6000602082019050818103600083015261334081613304565b9050919050565b7f416461737761703a20494e53554646494349454e545f4c495155494449545900600082015250565b600061337d601f83612e02565b915061338882613347565b602082019050919050565b600060208201905081810360008301526133ac81613370565b9050919050565b7f416461737761703a20494e56414c49445f544f00000000000000000000000000600082015250565b60006133e9601383612e02565b91506133f4826133b3565b602082019050919050565b60006020820190508181036000830152613418816133dc565b9050919050565b600082825260208201905092915050565b82818337600083830152505050565b600061344b838561341f565b9350613458838584613430565b61346183612e46565b840190509392505050565b60006080820190506134816000830188612fa7565b61348e6020830187612fd1565b61349b6040830186612fd1565b81810360608301526134ae81848661343f565b90509695505050505050565b6000815190506134c981612c80565b92915050565b6000602082840312156134e5576134e4612c6c565b5b60006134f3848285016134ba565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061353682612c76565b915061354183612c76565b925082821015613554576135536134fc565b5b828203905092915050565b7f416461737761703a20494e53554646494349454e545f494e5055545f414d4f5560008201527f4e54000000000000000000000000000000000000000000000000000000000000602082015250565b60006135bb602283612e02565b91506135c68261355f565b604082019050919050565b600060208201905081810360008301526135ea816135ae565b9050919050565b7f416461737761703a204b00000000000000000000000000000000000000000000600082015250565b6000613627600a83612e02565b9150613632826135f1565b602082019050919050565b600060208201905081810360008301526136568161361a565b9050919050565b60006080820190506136726000830187612fd1565b61367f6020830186612fd1565b61368c6040830185612fd1565b6136996060830184612fd1565b95945050505050565b7f416461737761703a20464f5242494444454e0000000000000000000000000000600082015250565b60006136d8601283612e02565b91506136e3826136a2565b602082019050919050565b60006020820190508181036000830152613707816136cb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061374882612c76565b915061375383612c76565b9250826137635761376261370e565b5b828204905092915050565b7f416461737761703a20494e53554646494349454e545f4c49515549444954595f60008201527f4d494e5445440000000000000000000000000000000000000000000000000000602082015250565b60006137ca602683612e02565b91506137d58261376e565b604082019050919050565b600060208201905081810360008301526137f9816137bd565b9050919050565b7f416461737761703a20494e53554646494349454e545f4c49515549444954595f60008201527f4255524e45440000000000000000000000000000000000000000000000000000602082015250565b600061385c602683612e02565b915061386782613800565b604082019050919050565b6000602082019050818103600083015261388b8161384f565b9050919050565b7f416461737761703a204558504952454400000000000000000000000000000000600082015250565b60006138c8601083612e02565b91506138d382613892565b602082019050919050565b600060208201905081810360008301526138f7816138bb565b9050919050565b600061390982612c76565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361393b5761393a6134fc565b5b600182019050919050565b600060c08201905061395b6000830189613058565b6139686020830188612fa7565b6139756040830187612fa7565b6139826060830186612fd1565b61398f6080830185612fd1565b61399c60a0830184612fd1565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b60006139e86002836139a7565b91506139f3826139b2565b600282019050919050565b6000819050919050565b613a19613a148261304e565b6139fe565b82525050565b6000613a2a826139db565b9150613a368285613a08565b602082019150613a468284613a08565b6020820191508190509392505050565b6000608082019050613a6b6000830187613058565b613a78602083018661308f565b613a856040830185613058565b613a926060830184613058565b95945050505050565b7f416461737761703a20494e56414c49445f5349474e4154555245000000000000600082015250565b6000613ad1601a83612e02565b9150613adc82613a9b565b602082019050919050565b60006020820190508181036000830152613b0081613ac4565b9050919050565b6000604082019050613b1c6000830185612fa7565b613b296020830184612fd1565b9392505050565b600081519050919050565b600081905092915050565b6000613b5182613b30565b613b5b8185613b3b565b9350613b6b818560208601612e13565b80840191505092915050565b6000613b838284613b46565b915081905092915050565b613b9781612f71565b8114613ba257600080fd5b50565b600081519050613bb481613b8e565b92915050565b600060208284031215613bd057613bcf612c6c565b5b6000613bde84828501613ba5565b91505092915050565b7f416461737761703a205452414e534645525f4641494c45440000000000000000600082015250565b6000613c1d601883612e02565b9150613c2882613be7565b602082019050919050565b60006020820190508181036000830152613c4c81613c10565b9050919050565b6000613c5e82612c76565b9150613c6983612c76565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613ca257613ca16134fc565b5b828202905092915050565b7f64732d6d6174682d6d756c2d6f766572666c6f77000000000000000000000000600082015250565b6000613ce3601483612e02565b9150613cee82613cad565b602082019050919050565b60006020820190508181036000830152613d1281613cd6565b9050919050565b7f64732d6d6174682d7375622d756e646572666c6f770000000000000000000000600082015250565b6000613d4f601583612e02565b9150613d5a82613d19565b602082019050919050565b60006020820190508181036000830152613d7e81613d42565b9050919050565b7f416461737761703a204f564552464c4f57000000000000000000000000000000600082015250565b6000613dbb601183612e02565b9150613dc682613d85565b602082019050919050565b60006020820190508181036000830152613dea81613dae565b9050919050565b6000613dfc82612c76565b9150613e0783612c76565b925082613e1757613e1661370e565b5b828206905092915050565b6000613e2d82612edb565b9150613e3883612edb565b925082821015613e4b57613e4a6134fc565b5b828203905092915050565b6000613e6182612c76565b9150613e6c83612c76565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613ea157613ea06134fc565b5b828201905092915050565b6000604082019050613ec16000830185612ecc565b613ece6020830184612ecc565b9392505050565b600081519050613ee481612cde565b92915050565b600060208284031215613f0057613eff612c6c565b5b6000613f0e84828501613ed5565b91505092915050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613f4a82613f17565b9150613f5583613f17565b9250817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613f8a57613f896134fc565b5b828202905092915050565b6000613fa082613f17565b9150613fab83613f17565b925082613fbb57613fba61370e565b5b828204905092915050565b7f64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000600082015250565b6000613ffc601483612e02565b915061400782613fc6565b602082019050919050565b6000602082019050818103600083015261402b81613fef565b905091905056fea2646970667358221220db93b80e894c8ccbd1f4c4f80c75a4013d95880f86cc1693fddb67f4a2bbe55764736f6c634300080d0033a264697066735822122023a55aed2bd2f75c648aef662a57d1e5885cafa3ecf60d2e7e83796b31f2835464736f6c634300080d0033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000b25760003560e01c80639aab92481162000081578063c9c653961162000063578063c9c653961462000195578063e6a4390514620001cb578063f46901ed146200020157620000b2565b80639aab92481462000153578063a2e74af6146200017557620000b2565b8063017e7e5814620000b7578063094b741514620000d95780631e3dd18b14620000fb578063574f2ba31462000131575b600080fd5b620000c162000221565b604051620000d0919062000a8e565b60405180910390f35b620000e362000245565b604051620000f2919062000a8e565b60405180910390f35b62000119600480360381019062000113919062000aeb565b6200026b565b60405162000128919062000a8e565b60405180910390f35b6200013b620002ab565b6040516200014a919062000b2e565b60405180910390f35b6200015d620002b8565b6040516200016c919062000b66565b60405180910390f35b6200019360048036038101906200018d919062000bb4565b620002ec565b005b620001b36004803603810190620001ad919062000be6565b620003c3565b604051620001c2919062000a8e565b60405180910390f35b620001e96004803603810190620001e3919062000be6565b62000923565b604051620001f8919062000a8e565b60405180910390f35b6200021f600480360381019062000219919062000bb4565b62000965565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600381815481106200027c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600380549050905090565b600060405180602001620002cc9062000a3b565b6020820181038252601f19601f8201166040525080519060200120905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200037f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003769062000c8e565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160362000436576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200042d9062000d00565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106200047557838562000478565b84845b91509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620004ee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004e59062000d72565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614620005fc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005f39062000de4565b60405180910390fd5b600060405180602001620006109062000a3b565b6020820181038252601f19601f820116604052509050600083836040516020016200063d92919062000e56565b604051602081830303815290604052805190602001209050808251602084016000f594508473ffffffffffffffffffffffffffffffffffffffff1663485cc95585856040518363ffffffff1660e01b81526004016200069e92919062000e86565b600060405180830381600087803b158015620006b957600080fd5b505af1158015620006ce573d6000803e3d6000fd5b5050505084600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9876003805490506040516200091192919062000eb3565b60405180910390a35050505092915050565b60026020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620009f8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620009ef9062000c8e565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6142838062000ee183390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000a768262000a49565b9050919050565b62000a888162000a69565b82525050565b600060208201905062000aa5600083018462000a7d565b92915050565b600080fd5b6000819050919050565b62000ac58162000ab0565b811462000ad157600080fd5b50565b60008135905062000ae58162000aba565b92915050565b60006020828403121562000b045762000b0362000aab565b5b600062000b148482850162000ad4565b91505092915050565b62000b288162000ab0565b82525050565b600060208201905062000b45600083018462000b1d565b92915050565b6000819050919050565b62000b608162000b4b565b82525050565b600060208201905062000b7d600083018462000b55565b92915050565b62000b8e8162000a69565b811462000b9a57600080fd5b50565b60008135905062000bae8162000b83565b92915050565b60006020828403121562000bcd5762000bcc62000aab565b5b600062000bdd8482850162000b9d565b91505092915050565b6000806040838503121562000c005762000bff62000aab565b5b600062000c108582860162000b9d565b925050602062000c238582860162000b9d565b9150509250929050565b600082825260208201905092915050565b7f416461737761703a20464f5242494444454e0000000000000000000000000000600082015250565b600062000c7660128362000c2d565b915062000c838262000c3e565b602082019050919050565b6000602082019050818103600083015262000ca98162000c67565b9050919050565b7f416461737761703a204944454e544943414c5f41444452455353455300000000600082015250565b600062000ce8601c8362000c2d565b915062000cf58262000cb0565b602082019050919050565b6000602082019050818103600083015262000d1b8162000cd9565b9050919050565b7f416461737761703a205a45524f5f414444524553530000000000000000000000600082015250565b600062000d5a60158362000c2d565b915062000d678262000d22565b602082019050919050565b6000602082019050818103600083015262000d8d8162000d4b565b9050919050565b7f416461737761703a20504149525f455849535453000000000000000000000000600082015250565b600062000dcc60148362000c2d565b915062000dd98262000d94565b602082019050919050565b6000602082019050818103600083015262000dff8162000dbd565b9050919050565b60008160601b9050919050565b600062000e208262000e06565b9050919050565b600062000e348262000e13565b9050919050565b62000e5062000e4a8262000a69565b62000e27565b82525050565b600062000e64828562000e3b565b60148201915062000e76828462000e3b565b6014820191508190509392505050565b600060408201905062000e9d600083018562000a7d565b62000eac602083018462000a7d565b9392505050565b600060408201905062000eca600083018562000a7d565b62000ed9602083018462000b1d565b939250505056fe60806040526001600c553480156200001657600080fd5b5060004690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280601081526020017f41646173776170204c5020546f6b656e00000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001620000cf959493929190620001ae565b604051602081830303815290604052805190602001206003819055505033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200020b565b6000819050919050565b620001488162000133565b82525050565b6000819050919050565b62000163816200014e565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001968262000169565b9050919050565b620001a88162000189565b82525050565b600060a082019050620001c560008301886200013d565b620001d460208301876200013d565b620001e360408301866200013d565b620001f2606083018562000158565b6200020160808301846200019d565b9695505050505050565b614068806200021b6000396000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a7146104eb578063d505accf14610509578063dd62ed3e14610525578063fff6cae914610555576101b9565b8063ba9a7a5614610493578063bc25cf77146104b1578063c45a0155146104cd576101b9565b80637ecebe00116100d35780637ecebe00146103e457806389afcb441461041457806395d89b4114610445578063a9059cbb14610463576101b9565b80636a6278421461036657806370a08231146103965780637464fc3d146103c6576101b9565b806323b872dd116101665780633644e515116101405780633644e515146102f0578063485cc9551461030e5780635909c0d51461032a5780635a3d549314610348576101b9565b806323b872dd1461028457806330adf81f146102b4578063313ce567146102d2576101b9565b8063095ea7b311610197578063095ea7b3146102185780630dfe16811461024857806318160ddd14610266576101b9565b8063022c0d9f146101be57806306fdde03146101da5780630902f1ac146101f8575b600080fd5b6101d860048036038101906101d39190612d6f565b61055f565b005b6101e2610bb1565b6040516101ef9190612e90565b60405180910390f35b610200610bea565b60405161020f93929190612efa565b60405180910390f35b610232600480360381019061022d9190612f31565b610c47565b60405161023f9190612f8c565b60405180910390f35b610250610c5e565b60405161025d9190612fb6565b60405180910390f35b61026e610c84565b60405161027b9190612fe0565b60405180910390f35b61029e60048036038101906102999190612ffb565b610c8a565b6040516102ab9190612f8c565b60405180910390f35b6102bc610e55565b6040516102c99190613067565b60405180910390f35b6102da610e7c565b6040516102e7919061309e565b60405180910390f35b6102f8610e81565b6040516103059190613067565b60405180910390f35b610328600480360381019061032391906130b9565b610e87565b005b610332610f9d565b60405161033f9190612fe0565b60405180910390f35b610350610fa3565b60405161035d9190612fe0565b60405180910390f35b610380600480360381019061037b91906130f9565b610fa9565b60405161038d9190612fe0565b60405180910390f35b6103b060048036038101906103ab91906130f9565b611392565b6040516103bd9190612fe0565b60405180910390f35b6103ce6113aa565b6040516103db9190612fe0565b60405180910390f35b6103fe60048036038101906103f991906130f9565b6113b0565b60405161040b9190612fe0565b60405180910390f35b61042e600480360381019061042991906130f9565b6113c8565b60405161043c929190613126565b60405180910390f35b61044d611872565b60405161045a9190612e90565b60405180910390f35b61047d60048036038101906104789190612f31565b6118ab565b60405161048a9190612f8c565b60405180910390f35b61049b6118c2565b6040516104a89190612fe0565b60405180910390f35b6104cb60048036038101906104c691906130f9565b6118c8565b005b6104d5611af4565b6040516104e29190612fb6565b60405180910390f35b6104f3611b1a565b6040516105009190612fb6565b60405180910390f35b610523600480360381019061051e91906131a7565b611b40565b005b61053f600480360381019061053a91906130b9565b611d68565b60405161054c9190612fe0565b60405180910390f35b61055d611d8d565b005b6001600c54146105a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059b90613295565b60405180910390fd5b6000600c8190555060008511806105bb5750600084115b6105fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f190613327565b60405180910390fd5b600080610605610bea565b5091509150816dffffffffffffffffffffffffffff16871080156106385750806dffffffffffffffffffffffffffff1686105b610677576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066e90613393565b60405180910390fd5b6000806000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415801561073057508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b61076f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610766906133ff565b60405180910390fd5b60008b111561078457610783828a8d611f5e565b5b60008a111561079957610798818a8c611f5e565b5b6000888890501115610819578873ffffffffffffffffffffffffffffffffffffffff166331f22e23338d8d8c8c6040518663ffffffff1660e01b81526004016107e695949392919061346c565b600060405180830381600087803b15801561080057600080fd5b505af1158015610814573d6000803e3d6000fd5b505050505b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108529190612fb6565b602060405180830381865afa15801561086f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089391906134cf565b93508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108ce9190612fb6565b602060405180830381865afa1580156108eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090f91906134cf565b92505050600089856dffffffffffffffffffffffffffff16610931919061352b565b831161093e576000610966565b89856dffffffffffffffffffffffffffff1661095a919061352b565b83610965919061352b565b5b9050600089856dffffffffffffffffffffffffffff16610986919061352b565b83116109935760006109bb565b89856dffffffffffffffffffffffffffff166109af919061352b565b836109ba919061352b565b5b905060008211806109cc5750600081115b610a0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a02906135d1565b60405180910390fd5b6000610a47610a246003856120e890919063ffffffff16565b610a396103e8886120e890919063ffffffff16565b61215590919063ffffffff16565b90506000610a85610a626003856120e890919063ffffffff16565b610a776103e8886120e890919063ffffffff16565b61215590919063ffffffff16565b9050610acf620f4240610ac1896dffffffffffffffffffffffffffff168b6dffffffffffffffffffffffffffff166120e890919063ffffffff16565b6120e890919063ffffffff16565b610ae282846120e890919063ffffffff16565b1015610b23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1a9061363d565b60405180910390fd5b5050610b31848488886121ae565b8873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82284848f8f604051610b94949392919061365d565b60405180910390a35050505050506001600c819055505050505050565b6040518060400160405280601081526020017f41646173776170204c5020546f6b656e0000000000000000000000000000000081525081565b6000806000600860009054906101000a90046dffffffffffffffffffffffffffff1692506008600e9054906101000a90046dffffffffffffffffffffffffffff1691506008601c9054906101000a900463ffffffff169050909192565b6000610c543384846124a2565b6001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610e3f57610dbe82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461215590919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610e4a84848461258d565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0e906136ee565b60405180910390fd5b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60095481565b600a5481565b60006001600c5414610ff0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe790613295565b60405180910390fd5b6000600c81905550600080611003610bea565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110659190612fb6565b602060405180830381865afa158015611082573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a691906134cf565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111059190612fb6565b602060405180830381865afa158015611122573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114691906134cf565b9050600061116d856dffffffffffffffffffffffffffff168461215590919063ffffffff16565b90506000611194856dffffffffffffffffffffffffffff168461215590919063ffffffff16565b905060006111a28787612721565b9050600080549050600081036111f5576111e16103e86111d36111ce86886120e890919063ffffffff16565b6128f2565b61215590919063ffffffff16565b98506111f060006103e861296c565b61125c565b611259886dffffffffffffffffffffffffffff1661121c83876120e890919063ffffffff16565b611226919061373d565b886dffffffffffffffffffffffffffff1661124a84876120e890919063ffffffff16565b611254919061373d565b612a86565b98505b6000891161129f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611296906137e0565b60405180910390fd5b6112a98a8a61296c565b6112b586868a8a6121ae565b811561132d576113266008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166120e890919063ffffffff16565b600b819055505b3373ffffffffffffffffffffffffffffffffffffffff167f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f8585604051611375929190613126565b60405180910390a250505050505050506001600c81905550919050565b60016020528060005260406000206000915090505481565b600b5481565b60046020528060005260406000206000915090505481565b6000806001600c5414611410576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140790613295565b60405180910390fd5b6000600c81905550600080611423610bea565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016114b19190612fb6565b602060405180830381865afa1580156114ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f291906134cf565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161152f9190612fb6565b602060405180830381865afa15801561154c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157091906134cf565b90506000600160003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006115c28888612721565b9050600080549050806115de86856120e890919063ffffffff16565b6115e8919061373d565b9a50806115fe85856120e890919063ffffffff16565b611608919061373d565b995060008b11801561161a575060008a115b611659576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165090613872565b60405180910390fd5b6116633084612a9f565b61166e878d8d611f5e565b611679868d8c611f5e565b8673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016116b29190612fb6565b602060405180830381865afa1580156116cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f391906134cf565b94508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161172e9190612fb6565b602060405180830381865afa15801561174b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061176f91906134cf565b935061177d85858b8b6121ae565b81156117f5576117ee6008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166120e890919063ffffffff16565b600b819055505b8b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d819364968d8d604051611854929190613126565b60405180910390a35050505050505050506001600c81905550915091565b6040518060400160405280600381526020017f414c50000000000000000000000000000000000000000000000000000000000081525081565b60006118b833848461258d565b6001905092915050565b6103e881565b6001600c541461190d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190490613295565b60405180910390fd5b6000600c819055506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611a258284611a20600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016119d19190612fb6565b602060405180830381865afa1580156119ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a1291906134cf565b61215590919063ffffffff16565b611f5e565b611ae78184611ae26008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611a939190612fb6565b602060405180830381865afa158015611ab0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad491906134cf565b61215590919063ffffffff16565b611f5e565b50506001600c8190555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b42841015611b83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b7a906138de565b60405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190611bff906138fe565b919050558a604051602001611c1996959493929190613946565b60405160208183030381529060405280519060200120604051602001611c40929190613a1f565b604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051611c7d9493929190613a56565b6020604051602081039080840390855afa158015611c9f573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015611d1357508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611d52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d4990613ae7565b60405180910390fd5b611d5d8989896124a2565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b6001600c5414611dd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dc990613295565b60405180910390fd5b6000600c81905550611f54600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611e389190612fb6565b602060405180830381865afa158015611e55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e7991906134cf565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611ed49190612fb6565b602060405180830381865afa158015611ef1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f1591906134cf565b600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff166121ae565b6001600c81905550565b6000808473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601981526020017f7472616e7366657228616464726573732c75696e743235362900000000000000815250805190602001208585604051602401611fc8929190613b07565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516120329190613b77565b6000604051808303816000865af19150503d806000811461206f576040519150601f19603f3d011682016040523d82523d6000602084013e612074565b606091505b50915091508180156120a257506000815114806120a15750808060200190518101906120a09190613bba565b5b5b6120e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120d890613c33565b60405180910390fd5b5050505050565b6000808214806121105750828283856121019190613c53565b92508261210e919061373d565b145b61214f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161214690613cf9565b60405180910390fd5b92915050565b6000828284612164919061352b565b91508111156121a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161219f90613d65565b60405180910390fd5b92915050565b6dffffffffffffffffffffffffffff801684111580156121de57506dffffffffffffffffffffffffffff80168311155b61221d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161221490613dd1565b60405180910390fd5b6000640100000000426122309190613df1565b905060006008601c9054906101000a900463ffffffff16826122529190613e22565b905060008163ffffffff1611801561227b57506000846dffffffffffffffffffffffffffff1614155b801561229857506000836dffffffffffffffffffffffffffff1614155b1561239e578063ffffffff166122dd856122b186612bb9565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612bed90919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166123059190613c53565b600960008282546123169190613e56565b925050819055508063ffffffff1661235d8461233187612bb9565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16612bed90919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166123859190613c53565b600a60008282546123969190613e56565b925050819055505b85600860006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550846008600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550816008601c6101000a81548163ffffffff021916908363ffffffff1602179055507f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff16604051612492929190613eac565b60405180910390a1505050505050565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516125809190612fe0565b60405180910390a3505050565b6125df81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461215590919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061267481600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612c1390919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516127149190612fe0565b60405180910390a3505050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015612791573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127b59190613eea565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141591506000600b54905082156128d857600081146128d357600061283c612837866dffffffffffffffffffffffffffff16886dffffffffffffffffffffffffffff166120e890919063ffffffff16565b6128f2565b90506000612849836128f2565b9050808211156128d057600061287c61286b838561215590919063ffffffff16565b6000546120e890919063ffffffff16565b905060006128a6836128986005876120e890919063ffffffff16565b612c1390919063ffffffff16565b9050600081836128b6919061373d565b905060008111156128cc576128cb878261296c565b5b5050505b50505b6128ea565b600081146128e9576000600b819055505b5b505092915050565b600060038211156129595781905060006001600284612911919061373d565b61291b9190613e56565b90505b81811015612953578091506002818285612938919061373d565b6129429190613e56565b61294c919061373d565b905061291e565b50612967565b6000821461296657600190505b5b919050565b61298181600054612c1390919063ffffffff16565b6000819055506129d981600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612c1390919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612a7a9190612fe0565b60405180910390a35050565b6000818310612a955781612a97565b825b905092915050565b612af181600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461215590919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612b498160005461215590919063ffffffff16565b600081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612bad9190612fe0565b60405180910390a35050565b60006e010000000000000000000000000000826dffffffffffffffffffffffffffff16612be69190613f3f565b9050919050565b6000816dffffffffffffffffffffffffffff1683612c0b9190613f95565b905092915050565b6000828284612c229190613e56565b9150811015612c66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c5d90614012565b60405180910390fd5b92915050565b600080fd5b600080fd5b6000819050919050565b612c8981612c76565b8114612c9457600080fd5b50565b600081359050612ca681612c80565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612cd782612cac565b9050919050565b612ce781612ccc565b8114612cf257600080fd5b50565b600081359050612d0481612cde565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112612d2f57612d2e612d0a565b5b8235905067ffffffffffffffff811115612d4c57612d4b612d0f565b5b602083019150836001820283011115612d6857612d67612d14565b5b9250929050565b600080600080600060808688031215612d8b57612d8a612c6c565b5b6000612d9988828901612c97565b9550506020612daa88828901612c97565b9450506040612dbb88828901612cf5565b935050606086013567ffffffffffffffff811115612ddc57612ddb612c71565b5b612de888828901612d19565b92509250509295509295909350565b600081519050919050565b600082825260208201905092915050565b60005b83811015612e31578082015181840152602081019050612e16565b83811115612e40576000848401525b50505050565b6000601f19601f8301169050919050565b6000612e6282612df7565b612e6c8185612e02565b9350612e7c818560208601612e13565b612e8581612e46565b840191505092915050565b60006020820190508181036000830152612eaa8184612e57565b905092915050565b60006dffffffffffffffffffffffffffff82169050919050565b612ed581612eb2565b82525050565b600063ffffffff82169050919050565b612ef481612edb565b82525050565b6000606082019050612f0f6000830186612ecc565b612f1c6020830185612ecc565b612f296040830184612eeb565b949350505050565b60008060408385031215612f4857612f47612c6c565b5b6000612f5685828601612cf5565b9250506020612f6785828601612c97565b9150509250929050565b60008115159050919050565b612f8681612f71565b82525050565b6000602082019050612fa16000830184612f7d565b92915050565b612fb081612ccc565b82525050565b6000602082019050612fcb6000830184612fa7565b92915050565b612fda81612c76565b82525050565b6000602082019050612ff56000830184612fd1565b92915050565b60008060006060848603121561301457613013612c6c565b5b600061302286828701612cf5565b935050602061303386828701612cf5565b925050604061304486828701612c97565b9150509250925092565b6000819050919050565b6130618161304e565b82525050565b600060208201905061307c6000830184613058565b92915050565b600060ff82169050919050565b61309881613082565b82525050565b60006020820190506130b3600083018461308f565b92915050565b600080604083850312156130d0576130cf612c6c565b5b60006130de85828601612cf5565b92505060206130ef85828601612cf5565b9150509250929050565b60006020828403121561310f5761310e612c6c565b5b600061311d84828501612cf5565b91505092915050565b600060408201905061313b6000830185612fd1565b6131486020830184612fd1565b9392505050565b61315881613082565b811461316357600080fd5b50565b6000813590506131758161314f565b92915050565b6131848161304e565b811461318f57600080fd5b50565b6000813590506131a18161317b565b92915050565b600080600080600080600060e0888a0312156131c6576131c5612c6c565b5b60006131d48a828b01612cf5565b97505060206131e58a828b01612cf5565b96505060406131f68a828b01612c97565b95505060606132078a828b01612c97565b94505060806132188a828b01613166565b93505060a06132298a828b01613192565b92505060c061323a8a828b01613192565b91505092959891949750929550565b7f416461737761703a204c4f434b45440000000000000000000000000000000000600082015250565b600061327f600f83612e02565b915061328a82613249565b602082019050919050565b600060208201905081810360008301526132ae81613272565b9050919050565b7f416461737761703a20494e53554646494349454e545f4f55545055545f414d4f60008201527f554e540000000000000000000000000000000000000000000000000000000000602082015250565b6000613311602383612e02565b915061331c826132b5565b604082019050919050565b6000602082019050818103600083015261334081613304565b9050919050565b7f416461737761703a20494e53554646494349454e545f4c495155494449545900600082015250565b600061337d601f83612e02565b915061338882613347565b602082019050919050565b600060208201905081810360008301526133ac81613370565b9050919050565b7f416461737761703a20494e56414c49445f544f00000000000000000000000000600082015250565b60006133e9601383612e02565b91506133f4826133b3565b602082019050919050565b60006020820190508181036000830152613418816133dc565b9050919050565b600082825260208201905092915050565b82818337600083830152505050565b600061344b838561341f565b9350613458838584613430565b61346183612e46565b840190509392505050565b60006080820190506134816000830188612fa7565b61348e6020830187612fd1565b61349b6040830186612fd1565b81810360608301526134ae81848661343f565b90509695505050505050565b6000815190506134c981612c80565b92915050565b6000602082840312156134e5576134e4612c6c565b5b60006134f3848285016134ba565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061353682612c76565b915061354183612c76565b925082821015613554576135536134fc565b5b828203905092915050565b7f416461737761703a20494e53554646494349454e545f494e5055545f414d4f5560008201527f4e54000000000000000000000000000000000000000000000000000000000000602082015250565b60006135bb602283612e02565b91506135c68261355f565b604082019050919050565b600060208201905081810360008301526135ea816135ae565b9050919050565b7f416461737761703a204b00000000000000000000000000000000000000000000600082015250565b6000613627600a83612e02565b9150613632826135f1565b602082019050919050565b600060208201905081810360008301526136568161361a565b9050919050565b60006080820190506136726000830187612fd1565b61367f6020830186612fd1565b61368c6040830185612fd1565b6136996060830184612fd1565b95945050505050565b7f416461737761703a20464f5242494444454e0000000000000000000000000000600082015250565b60006136d8601283612e02565b91506136e3826136a2565b602082019050919050565b60006020820190508181036000830152613707816136cb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061374882612c76565b915061375383612c76565b9250826137635761376261370e565b5b828204905092915050565b7f416461737761703a20494e53554646494349454e545f4c49515549444954595f60008201527f4d494e5445440000000000000000000000000000000000000000000000000000602082015250565b60006137ca602683612e02565b91506137d58261376e565b604082019050919050565b600060208201905081810360008301526137f9816137bd565b9050919050565b7f416461737761703a20494e53554646494349454e545f4c49515549444954595f60008201527f4255524e45440000000000000000000000000000000000000000000000000000602082015250565b600061385c602683612e02565b915061386782613800565b604082019050919050565b6000602082019050818103600083015261388b8161384f565b9050919050565b7f416461737761703a204558504952454400000000000000000000000000000000600082015250565b60006138c8601083612e02565b91506138d382613892565b602082019050919050565b600060208201905081810360008301526138f7816138bb565b9050919050565b600061390982612c76565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361393b5761393a6134fc565b5b600182019050919050565b600060c08201905061395b6000830189613058565b6139686020830188612fa7565b6139756040830187612fa7565b6139826060830186612fd1565b61398f6080830185612fd1565b61399c60a0830184612fd1565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b60006139e86002836139a7565b91506139f3826139b2565b600282019050919050565b6000819050919050565b613a19613a148261304e565b6139fe565b82525050565b6000613a2a826139db565b9150613a368285613a08565b602082019150613a468284613a08565b6020820191508190509392505050565b6000608082019050613a6b6000830187613058565b613a78602083018661308f565b613a856040830185613058565b613a926060830184613058565b95945050505050565b7f416461737761703a20494e56414c49445f5349474e4154555245000000000000600082015250565b6000613ad1601a83612e02565b9150613adc82613a9b565b602082019050919050565b60006020820190508181036000830152613b0081613ac4565b9050919050565b6000604082019050613b1c6000830185612fa7565b613b296020830184612fd1565b9392505050565b600081519050919050565b600081905092915050565b6000613b5182613b30565b613b5b8185613b3b565b9350613b6b818560208601612e13565b80840191505092915050565b6000613b838284613b46565b915081905092915050565b613b9781612f71565b8114613ba257600080fd5b50565b600081519050613bb481613b8e565b92915050565b600060208284031215613bd057613bcf612c6c565b5b6000613bde84828501613ba5565b91505092915050565b7f416461737761703a205452414e534645525f4641494c45440000000000000000600082015250565b6000613c1d601883612e02565b9150613c2882613be7565b602082019050919050565b60006020820190508181036000830152613c4c81613c10565b9050919050565b6000613c5e82612c76565b9150613c6983612c76565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613ca257613ca16134fc565b5b828202905092915050565b7f64732d6d6174682d6d756c2d6f766572666c6f77000000000000000000000000600082015250565b6000613ce3601483612e02565b9150613cee82613cad565b602082019050919050565b60006020820190508181036000830152613d1281613cd6565b9050919050565b7f64732d6d6174682d7375622d756e646572666c6f770000000000000000000000600082015250565b6000613d4f601583612e02565b9150613d5a82613d19565b602082019050919050565b60006020820190508181036000830152613d7e81613d42565b9050919050565b7f416461737761703a204f564552464c4f57000000000000000000000000000000600082015250565b6000613dbb601183612e02565b9150613dc682613d85565b602082019050919050565b60006020820190508181036000830152613dea81613dae565b9050919050565b6000613dfc82612c76565b9150613e0783612c76565b925082613e1757613e1661370e565b5b828206905092915050565b6000613e2d82612edb565b9150613e3883612edb565b925082821015613e4b57613e4a6134fc565b5b828203905092915050565b6000613e6182612c76565b9150613e6c83612c76565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613ea157613ea06134fc565b5b828201905092915050565b6000604082019050613ec16000830185612ecc565b613ece6020830184612ecc565b9392505050565b600081519050613ee481612cde565b92915050565b600060208284031215613f0057613eff612c6c565b5b6000613f0e84828501613ed5565b91505092915050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613f4a82613f17565b9150613f5583613f17565b9250817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613f8a57613f896134fc565b5b828202905092915050565b6000613fa082613f17565b9150613fab83613f17565b925082613fbb57613fba61370e565b5b828204905092915050565b7f64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000600082015250565b6000613ffc601483612e02565b915061400782613fc6565b602082019050919050565b6000602082019050818103600083015261402b81613fef565b905091905056fea2646970667358221220db93b80e894c8ccbd1f4c4f80c75a4013d95880f86cc1693fddb67f4a2bbe55764736f6c634300080d0033a264697066735822122023a55aed2bd2f75c648aef662a57d1e5885cafa3ecf60d2e7e83796b31f2835464736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1199:14",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:14",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:14",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:14"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:14"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:14",
                "type": ""
              }
            ],
            "src": "7:75:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:14",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:14",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:14"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:14",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:14",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:14"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:14",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:14"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:14"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:14",
                "type": ""
              }
            ],
            "src": "334:126:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:14"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:14"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:14"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:14",
                "type": ""
              }
            ],
            "src": "466:96:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:14",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:14",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:14"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:14"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:14"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:14"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:14"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:14"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:14",
                "type": ""
              }
            ],
            "src": "568:122:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "759:80:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "769:22:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "784:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "778:5:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:13:14"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "769:5:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "827:5:14"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "800:26:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:33:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "800:33:14"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "737:6:14",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "745:3:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "753:5:14",
                "type": ""
              }
            ],
            "src": "696:143:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "922:274:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "968:83:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "970:77:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "970:79:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "970:79:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "943:7:14"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "952:9:14"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "939:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "939:23:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "964:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "935:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "935:32:14"
                  },
                  "nodeType": "YulIf",
                  "src": "932:119:14"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1061:128:14",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1076:15:14",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1090:1:14",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1080:6:14",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1105:74:14",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1151:9:14"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1162:6:14"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1147:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1147:22:14"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1171:7:14"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1115:31:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1115:64:14"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1105:6:14"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "892:9:14",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "903:7:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "915:6:14",
                "type": ""
              }
            ],
            "src": "845:351:14"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 14,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9105:14",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:14",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:14"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:14"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:14",
                "type": ""
              }
            ],
            "src": "7:126:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "184:51:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "194:35:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "223:5:14"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "205:17:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "205:24:14"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "194:7:14"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "166:5:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "176:7:14",
                "type": ""
              }
            ],
            "src": "139:96:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "306:53:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "323:3:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "346:5:14"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "328:17:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "328:24:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "316:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "316:37:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "316:37:14"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "294:5:14",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "301:3:14",
                "type": ""
              }
            ],
            "src": "241:118:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "463:124:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "473:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "485:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "496:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "481:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "481:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "473:4:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "553:6:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "566:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "577:1:14",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "562:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "562:17:14"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "509:43:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "509:71:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "509:71:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "435:9:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "447:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "458:4:14",
                "type": ""
              }
            ],
            "src": "365:222:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "633:35:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "643:19:14",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "659:2:14",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "653:5:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "653:9:14"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "643:6:14"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "626:6:14",
                "type": ""
              }
            ],
            "src": "593:75:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "763:28:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "780:1:14",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "783:1:14",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "773:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "773:12:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "773:12:14"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "674:117:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "886:28:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "903:1:14",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "906:1:14",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "896:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "896:12:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "896:12:14"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "797:117:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "965:32:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "975:16:14",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "986:5:14"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "975:7:14"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "947:5:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "957:7:14",
                "type": ""
              }
            ],
            "src": "920:77:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1046:79:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1103:16:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1112:1:14",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1115:1:14",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1105:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1105:12:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1105:12:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1069:5:14"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1094:5:14"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1076:17:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1076:24:14"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1066:2:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1066:35:14"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1059:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1059:43:14"
                  },
                  "nodeType": "YulIf",
                  "src": "1056:63:14"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1039:5:14",
                "type": ""
              }
            ],
            "src": "1003:122:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1183:87:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1193:29:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1215:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1202:12:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1202:20:14"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1193:5:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1258:5:14"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1231:26:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1231:33:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1231:33:14"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1161:6:14",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1169:3:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1177:5:14",
                "type": ""
              }
            ],
            "src": "1131:139:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1342:263:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1388:83:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1390:77:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1390:79:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1390:79:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1363:7:14"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1372:9:14"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1359:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1359:23:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1384:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1355:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1355:32:14"
                  },
                  "nodeType": "YulIf",
                  "src": "1352:119:14"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1481:117:14",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1496:15:14",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1510:1:14",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1500:6:14",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1525:63:14",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1560:9:14"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1571:6:14"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1556:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1556:22:14"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1580:7:14"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1535:20:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1535:53:14"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1525:6:14"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1312:9:14",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1323:7:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1335:6:14",
                "type": ""
              }
            ],
            "src": "1276:329:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1676:53:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1693:3:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1716:5:14"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1698:17:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1698:24:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1686:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1686:37:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1686:37:14"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1664:5:14",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1671:3:14",
                "type": ""
              }
            ],
            "src": "1611:118:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1833:124:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1843:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1855:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1866:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1851:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1851:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1843:4:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1923:6:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1936:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1947:1:14",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1932:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1932:17:14"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1879:43:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1879:71:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1879:71:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1805:9:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1817:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1828:4:14",
                "type": ""
              }
            ],
            "src": "1735:222:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2008:32:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2018:16:14",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2029:5:14"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2018:7:14"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1990:5:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2000:7:14",
                "type": ""
              }
            ],
            "src": "1963:77:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2111:53:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2128:3:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2151:5:14"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "2133:17:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2133:24:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2121:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2121:37:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2121:37:14"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2099:5:14",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2106:3:14",
                "type": ""
              }
            ],
            "src": "2046:118:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2268:124:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2278:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2290:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2301:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2286:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2286:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2278:4:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2358:6:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2371:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2382:1:14",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2367:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2367:17:14"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2314:43:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2314:71:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2314:71:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2240:9:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2252:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2263:4:14",
                "type": ""
              }
            ],
            "src": "2170:222:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2441:79:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2498:16:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2507:1:14",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2510:1:14",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2500:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2500:12:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2500:12:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2464:5:14"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2489:5:14"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2471:17:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2471:24:14"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2461:2:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2461:35:14"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2454:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2454:43:14"
                  },
                  "nodeType": "YulIf",
                  "src": "2451:63:14"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2434:5:14",
                "type": ""
              }
            ],
            "src": "2398:122:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2578:87:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2588:29:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2610:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2597:12:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2597:20:14"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2588:5:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2653:5:14"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2626:26:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2626:33:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2626:33:14"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2556:6:14",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2564:3:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2572:5:14",
                "type": ""
              }
            ],
            "src": "2526:139:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2737:263:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2783:83:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2785:77:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2785:79:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2785:79:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2758:7:14"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2767:9:14"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2754:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2754:23:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2779:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2750:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2750:32:14"
                  },
                  "nodeType": "YulIf",
                  "src": "2747:119:14"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2876:117:14",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2891:15:14",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2905:1:14",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2895:6:14",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2920:63:14",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2955:9:14"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2966:6:14"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2951:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2951:22:14"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2975:7:14"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2930:20:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2930:53:14"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2920:6:14"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2707:9:14",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2718:7:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2730:6:14",
                "type": ""
              }
            ],
            "src": "2671:329:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3089:391:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3135:83:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3137:77:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3137:79:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3137:79:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3110:7:14"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3119:9:14"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3106:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3106:23:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3131:2:14",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3102:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3102:32:14"
                  },
                  "nodeType": "YulIf",
                  "src": "3099:119:14"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3228:117:14",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3243:15:14",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3257:1:14",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3247:6:14",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3272:63:14",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3307:9:14"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3318:6:14"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3303:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3303:22:14"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3327:7:14"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3282:20:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3282:53:14"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3272:6:14"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3355:118:14",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3370:16:14",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3384:2:14",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3374:6:14",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3400:63:14",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3435:9:14"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3446:6:14"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3431:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3431:22:14"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3455:7:14"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3410:20:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3410:53:14"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3400:6:14"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3051:9:14",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3062:7:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3074:6:14",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3082:6:14",
                "type": ""
              }
            ],
            "src": "3006:474:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3582:73:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3599:3:14"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3604:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3592:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3592:19:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3592:19:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3620:29:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3639:3:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3644:4:14",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3635:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3635:14:14"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3620:11:14"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3554:3:14",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3559:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3570:11:14",
                "type": ""
              }
            ],
            "src": "3486:169:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3767:62:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3789:6:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3797:1:14",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3785:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3785:14:14"
                      },
                      {
                        "hexValue": "416461737761703a20464f5242494444454e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3801:20:14",
                        "type": "",
                        "value": "Adaswap: FORBIDDEN"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3778:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3778:44:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3778:44:14"
                }
              ]
            },
            "name": "store_literal_in_memory_7072da1bf1dd8947b7fc33fa60cc47eaf8841525d4ece956440be60d226530a1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3759:6:14",
                "type": ""
              }
            ],
            "src": "3661:168:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3981:220:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3991:74:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4057:3:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4062:2:14",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3998:58:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3998:67:14"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3991:3:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4163:3:14"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_7072da1bf1dd8947b7fc33fa60cc47eaf8841525d4ece956440be60d226530a1",
                      "nodeType": "YulIdentifier",
                      "src": "4074:88:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4074:93:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4074:93:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4176:19:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4187:3:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4192:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4183:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4183:12:14"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4176:3:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7072da1bf1dd8947b7fc33fa60cc47eaf8841525d4ece956440be60d226530a1_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3969:3:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3977:3:14",
                "type": ""
              }
            ],
            "src": "3835:366:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4378:248:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4388:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4400:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4411:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4396:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4396:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4388:4:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4435:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4446:1:14",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4431:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4431:17:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4454:4:14"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4460:9:14"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4450:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4450:20:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4424:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4424:47:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4424:47:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4480:139:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4614:4:14"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7072da1bf1dd8947b7fc33fa60cc47eaf8841525d4ece956440be60d226530a1_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4488:124:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4488:131:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4480:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7072da1bf1dd8947b7fc33fa60cc47eaf8841525d4ece956440be60d226530a1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4358:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4373:4:14",
                "type": ""
              }
            ],
            "src": "4207:419:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4738:72:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4760:6:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4768:1:14",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4756:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4756:14:14"
                      },
                      {
                        "hexValue": "416461737761703a204944454e544943414c5f414444524553534553",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4772:30:14",
                        "type": "",
                        "value": "Adaswap: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4749:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4749:54:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4749:54:14"
                }
              ]
            },
            "name": "store_literal_in_memory_2e592ee48390aadd631d40d00a1f789505cfdd3d26a664bd51dd83da4f8e4bcb",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4730:6:14",
                "type": ""
              }
            ],
            "src": "4632:178:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4962:220:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4972:74:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5038:3:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5043:2:14",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4979:58:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4979:67:14"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4972:3:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5144:3:14"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_2e592ee48390aadd631d40d00a1f789505cfdd3d26a664bd51dd83da4f8e4bcb",
                      "nodeType": "YulIdentifier",
                      "src": "5055:88:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5055:93:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5055:93:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5157:19:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5168:3:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5173:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5164:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5164:12:14"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5157:3:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_2e592ee48390aadd631d40d00a1f789505cfdd3d26a664bd51dd83da4f8e4bcb_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4950:3:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4958:3:14",
                "type": ""
              }
            ],
            "src": "4816:366:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5359:248:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5369:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5381:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5392:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5377:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5377:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5369:4:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5416:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5427:1:14",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5412:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5412:17:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5435:4:14"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5441:9:14"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5431:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5431:20:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5405:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5405:47:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5405:47:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5461:139:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5595:4:14"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_2e592ee48390aadd631d40d00a1f789505cfdd3d26a664bd51dd83da4f8e4bcb_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5469:124:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5469:131:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5461:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2e592ee48390aadd631d40d00a1f789505cfdd3d26a664bd51dd83da4f8e4bcb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5339:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5354:4:14",
                "type": ""
              }
            ],
            "src": "5188:419:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5719:65:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5741:6:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5749:1:14",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5737:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5737:14:14"
                      },
                      {
                        "hexValue": "416461737761703a205a45524f5f41444452455353",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5753:23:14",
                        "type": "",
                        "value": "Adaswap: ZERO_ADDRESS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5730:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5730:47:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5730:47:14"
                }
              ]
            },
            "name": "store_literal_in_memory_1f6f2dc0e36b0c951761caa403fc689363e2e509b3488cce8a750bac42ced155",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5711:6:14",
                "type": ""
              }
            ],
            "src": "5613:171:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5936:220:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5946:74:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6012:3:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6017:2:14",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5953:58:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5953:67:14"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5946:3:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6118:3:14"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_1f6f2dc0e36b0c951761caa403fc689363e2e509b3488cce8a750bac42ced155",
                      "nodeType": "YulIdentifier",
                      "src": "6029:88:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6029:93:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6029:93:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6131:19:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6142:3:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6147:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6138:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6138:12:14"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6131:3:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_1f6f2dc0e36b0c951761caa403fc689363e2e509b3488cce8a750bac42ced155_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5924:3:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5932:3:14",
                "type": ""
              }
            ],
            "src": "5790:366:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6333:248:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6343:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6355:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6366:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6351:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6351:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6343:4:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6390:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6401:1:14",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6386:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6386:17:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6409:4:14"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6415:9:14"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6405:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6405:20:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6379:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6379:47:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6379:47:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6435:139:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6569:4:14"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_1f6f2dc0e36b0c951761caa403fc689363e2e509b3488cce8a750bac42ced155_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6443:124:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6443:131:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6435:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1f6f2dc0e36b0c951761caa403fc689363e2e509b3488cce8a750bac42ced155__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6313:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6328:4:14",
                "type": ""
              }
            ],
            "src": "6162:419:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6693:64:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6715:6:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6723:1:14",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6711:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6711:14:14"
                      },
                      {
                        "hexValue": "416461737761703a20504149525f455849535453",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6727:22:14",
                        "type": "",
                        "value": "Adaswap: PAIR_EXISTS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6704:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6704:46:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6704:46:14"
                }
              ]
            },
            "name": "store_literal_in_memory_03b34a24c4e362bea9a181b18b59e7cae31bae5ae125459064f34e608edd60e2",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6685:6:14",
                "type": ""
              }
            ],
            "src": "6587:170:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6909:220:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6919:74:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6985:3:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6990:2:14",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6926:58:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6926:67:14"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6919:3:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7091:3:14"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_03b34a24c4e362bea9a181b18b59e7cae31bae5ae125459064f34e608edd60e2",
                      "nodeType": "YulIdentifier",
                      "src": "7002:88:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7002:93:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7002:93:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7104:19:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7115:3:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7120:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7111:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7111:12:14"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7104:3:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_03b34a24c4e362bea9a181b18b59e7cae31bae5ae125459064f34e608edd60e2_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6897:3:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6905:3:14",
                "type": ""
              }
            ],
            "src": "6763:366:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7306:248:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7316:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7328:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7339:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7324:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7324:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7316:4:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7363:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7374:1:14",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7359:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7359:17:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7382:4:14"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7388:9:14"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7378:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7378:20:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7352:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7352:47:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7352:47:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7408:139:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7542:4:14"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_03b34a24c4e362bea9a181b18b59e7cae31bae5ae125459064f34e608edd60e2_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7416:124:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7416:131:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7408:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_03b34a24c4e362bea9a181b18b59e7cae31bae5ae125459064f34e608edd60e2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7286:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7301:4:14",
                "type": ""
              }
            ],
            "src": "7135:419:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7602:52:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7612:35:14",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7637:2:14",
                        "type": "",
                        "value": "96"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7641:5:14"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "7633:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7633:14:14"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "7612:8:14"
                    }
                  ]
                }
              ]
            },
            "name": "shift_left_96",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7583:5:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "7593:8:14",
                "type": ""
              }
            ],
            "src": "7560:94:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7707:47:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7717:31:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7742:5:14"
                      }
                    ],
                    "functionName": {
                      "name": "shift_left_96",
                      "nodeType": "YulIdentifier",
                      "src": "7728:13:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7728:20:14"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "7717:7:14"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7689:5:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "7699:7:14",
                "type": ""
              }
            ],
            "src": "7660:94:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7807:53:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7817:37:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7848:5:14"
                      }
                    ],
                    "functionName": {
                      "name": "leftAlign_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7828:19:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7828:26:14"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "7817:7:14"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7789:5:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "7799:7:14",
                "type": ""
              }
            ],
            "src": "7760:100:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7949:74:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7966:3:14"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8009:5:14"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "7991:17:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7991:24:14"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7971:19:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7971:45:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7959:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7959:58:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7959:58:14"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7937:5:14",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7944:3:14",
                "type": ""
              }
            ],
            "src": "7866:157:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8173:253:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8246:6:14"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8255:3:14"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8184:61:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8184:75:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8184:75:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8268:19:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8279:3:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8284:2:14",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8275:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8275:12:14"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8268:3:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8359:6:14"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8368:3:14"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8297:61:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8297:75:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8297:75:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8381:19:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8392:3:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8397:2:14",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8388:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8388:12:14"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8381:3:14"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8410:10:14",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "8417:3:14"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8410:3:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8144:3:14",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8150:6:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8158:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8169:3:14",
                "type": ""
              }
            ],
            "src": "8029:397:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8558:206:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8568:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8580:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8591:2:14",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8576:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8576:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8568:4:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8648:6:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8661:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8672:1:14",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8657:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8657:17:14"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8604:43:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8604:71:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8604:71:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8729:6:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8742:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8753:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8738:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8738:18:14"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8685:43:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8685:72:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8685:72:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8522:9:14",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8534:6:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8542:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8553:4:14",
                "type": ""
              }
            ],
            "src": "8432:332:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8896:206:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8906:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8918:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8929:2:14",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8914:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8914:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8906:4:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8986:6:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8999:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9010:1:14",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8995:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8995:17:14"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8942:43:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8942:71:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8942:71:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9067:6:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9080:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9091:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9076:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9076:18:14"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9023:43:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9023:72:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9023:72:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8860:9:14",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8872:6:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8880:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8891:4:14",
                "type": ""
              }
            ],
            "src": "8770:332:14"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7072da1bf1dd8947b7fc33fa60cc47eaf8841525d4ece956440be60d226530a1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Adaswap: FORBIDDEN\")\n\n    }\n\n    function abi_encode_t_stringliteral_7072da1bf1dd8947b7fc33fa60cc47eaf8841525d4ece956440be60d226530a1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_7072da1bf1dd8947b7fc33fa60cc47eaf8841525d4ece956440be60d226530a1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7072da1bf1dd8947b7fc33fa60cc47eaf8841525d4ece956440be60d226530a1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7072da1bf1dd8947b7fc33fa60cc47eaf8841525d4ece956440be60d226530a1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2e592ee48390aadd631d40d00a1f789505cfdd3d26a664bd51dd83da4f8e4bcb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Adaswap: IDENTICAL_ADDRESSES\")\n\n    }\n\n    function abi_encode_t_stringliteral_2e592ee48390aadd631d40d00a1f789505cfdd3d26a664bd51dd83da4f8e4bcb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2e592ee48390aadd631d40d00a1f789505cfdd3d26a664bd51dd83da4f8e4bcb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2e592ee48390aadd631d40d00a1f789505cfdd3d26a664bd51dd83da4f8e4bcb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2e592ee48390aadd631d40d00a1f789505cfdd3d26a664bd51dd83da4f8e4bcb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1f6f2dc0e36b0c951761caa403fc689363e2e509b3488cce8a750bac42ced155(memPtr) {\n\n        mstore(add(memPtr, 0), \"Adaswap: ZERO_ADDRESS\")\n\n    }\n\n    function abi_encode_t_stringliteral_1f6f2dc0e36b0c951761caa403fc689363e2e509b3488cce8a750bac42ced155_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_1f6f2dc0e36b0c951761caa403fc689363e2e509b3488cce8a750bac42ced155(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f6f2dc0e36b0c951761caa403fc689363e2e509b3488cce8a750bac42ced155__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f6f2dc0e36b0c951761caa403fc689363e2e509b3488cce8a750bac42ced155_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_03b34a24c4e362bea9a181b18b59e7cae31bae5ae125459064f34e608edd60e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Adaswap: PAIR_EXISTS\")\n\n    }\n\n    function abi_encode_t_stringliteral_03b34a24c4e362bea9a181b18b59e7cae31bae5ae125459064f34e608edd60e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_03b34a24c4e362bea9a181b18b59e7cae31bae5ae125459064f34e608edd60e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_03b34a24c4e362bea9a181b18b59e7cae31bae5ae125459064f34e608edd60e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_03b34a24c4e362bea9a181b18b59e7cae31bae5ae125459064f34e608edd60e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
      "id": 14,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "99:1774:3:-:0;;;307:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;365:12;351:11;;:26;;;;;;;;;;;;;;;;;;307:77;99:1774;;88:117:14;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;99:1774:3:-;;;;;;;",
  "deployedSourceMap": "99:1774:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;148:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;174:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;275:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;390:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;490:121;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1707:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;617:938;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;207:62;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1561:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;148:20;;;;;;;;;;;;:::o;174:26::-;;;;;;;;;;;;;:::o;275:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;390:94::-;439:4;462:8;:15;;;;455:22;;390:94;:::o;490:121::-;537:7;573:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;563:41;;;;;;556:48;;490:121;:::o;1707:164::-;1794:11;;;;;;;;;;;1780:25;;:10;:25;;;1772:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1852:12;1838:11;;:26;;;;;;;;;;;;;;;;;;1707:164;:::o;617:938::-;687:12;729:6;719:16;;:6;:16;;;711:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;779:14;795;822:6;813:15;;:6;:15;;;:53;;851:6;859;813:53;;;832:6;840;813:53;778:88;;;;902:1;884:20;;:6;:20;;;876:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;983:1;948:37;;:7;:15;956:6;948:15;;;;;;;;;;;;;;;:23;964:6;948:23;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;940:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1050:21;1074:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1050:54;;1114:12;1156:6;1164;1139:32;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1129:43;;;;;;1114:58;;1260:4;1249:8;1243:15;1238:2;1228:8;1224:17;1221:1;1213:52;1205:60;;1297:4;1284:29;;;1314:6;1322;1284:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1365:4;1339:7;:15;1347:6;1339:15;;;;;;;;;;;;;;;:23;1355:6;1339:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1405:4;1379:7;:15;1387:6;1379:15;;;;;;;;;;;;;;;:23;1395:6;1379:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1464:8;1478:4;1464:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1518:6;1498:50;;1510:6;1498:50;;;1526:4;1532:8;:15;;;;1498:50;;;;;;;:::i;:::-;;;;;;;;701:854;;;;617:938;;;;:::o;207:62::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1561:140::-;1636:11;;;;;;;;;;;1622:25;;:10;:25;;;1614:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1688:6;1680:5;;:14;;;;;;;;;;;;;;;;;;1561:140;:::o;-1:-1:-1:-;;;;;;;;:::o;7:126:14:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:77;957:7;986:5;975:16;;920:77;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:77::-;2000:7;2029:5;2018:16;;1963:77;;;:::o;2046:118::-;2133:24;2151:5;2133:24;:::i;:::-;2128:3;2121:37;2046:118;;:::o;2170:222::-;2263:4;2301:2;2290:9;2286:18;2278:26;;2314:71;2382:1;2371:9;2367:17;2358:6;2314:71;:::i;:::-;2170:222;;;;:::o;2398:122::-;2471:24;2489:5;2471:24;:::i;:::-;2464:5;2461:35;2451:63;;2510:1;2507;2500:12;2451:63;2398:122;:::o;2526:139::-;2572:5;2610:6;2597:20;2588:29;;2626:33;2653:5;2626:33;:::i;:::-;2526:139;;;;:::o;2671:329::-;2730:6;2779:2;2767:9;2758:7;2754:23;2750:32;2747:119;;;2785:79;;:::i;:::-;2747:119;2905:1;2930:53;2975:7;2966:6;2955:9;2951:22;2930:53;:::i;:::-;2920:63;;2876:117;2671:329;;;;:::o;3006:474::-;3074:6;3082;3131:2;3119:9;3110:7;3106:23;3102:32;3099:119;;;3137:79;;:::i;:::-;3099:119;3257:1;3282:53;3327:7;3318:6;3307:9;3303:22;3282:53;:::i;:::-;3272:63;;3228:117;3384:2;3410:53;3455:7;3446:6;3435:9;3431:22;3410:53;:::i;:::-;3400:63;;3355:118;3006:474;;;;;:::o;3486:169::-;3570:11;3604:6;3599:3;3592:19;3644:4;3639:3;3635:14;3620:29;;3486:169;;;;:::o;3661:168::-;3801:20;3797:1;3789:6;3785:14;3778:44;3661:168;:::o;3835:366::-;3977:3;3998:67;4062:2;4057:3;3998:67;:::i;:::-;3991:74;;4074:93;4163:3;4074:93;:::i;:::-;4192:2;4187:3;4183:12;4176:19;;3835:366;;;:::o;4207:419::-;4373:4;4411:2;4400:9;4396:18;4388:26;;4460:9;4454:4;4450:20;4446:1;4435:9;4431:17;4424:47;4488:131;4614:4;4488:131;:::i;:::-;4480:139;;4207:419;;;:::o;4632:178::-;4772:30;4768:1;4760:6;4756:14;4749:54;4632:178;:::o;4816:366::-;4958:3;4979:67;5043:2;5038:3;4979:67;:::i;:::-;4972:74;;5055:93;5144:3;5055:93;:::i;:::-;5173:2;5168:3;5164:12;5157:19;;4816:366;;;:::o;5188:419::-;5354:4;5392:2;5381:9;5377:18;5369:26;;5441:9;5435:4;5431:20;5427:1;5416:9;5412:17;5405:47;5469:131;5595:4;5469:131;:::i;:::-;5461:139;;5188:419;;;:::o;5613:171::-;5753:23;5749:1;5741:6;5737:14;5730:47;5613:171;:::o;5790:366::-;5932:3;5953:67;6017:2;6012:3;5953:67;:::i;:::-;5946:74;;6029:93;6118:3;6029:93;:::i;:::-;6147:2;6142:3;6138:12;6131:19;;5790:366;;;:::o;6162:419::-;6328:4;6366:2;6355:9;6351:18;6343:26;;6415:9;6409:4;6405:20;6401:1;6390:9;6386:17;6379:47;6443:131;6569:4;6443:131;:::i;:::-;6435:139;;6162:419;;;:::o;6587:170::-;6727:22;6723:1;6715:6;6711:14;6704:46;6587:170;:::o;6763:366::-;6905:3;6926:67;6990:2;6985:3;6926:67;:::i;:::-;6919:74;;7002:93;7091:3;7002:93;:::i;:::-;7120:2;7115:3;7111:12;7104:19;;6763:366;;;:::o;7135:419::-;7301:4;7339:2;7328:9;7324:18;7316:26;;7388:9;7382:4;7378:20;7374:1;7363:9;7359:17;7352:47;7416:131;7542:4;7416:131;:::i;:::-;7408:139;;7135:419;;;:::o;7560:94::-;7593:8;7641:5;7637:2;7633:14;7612:35;;7560:94;;;:::o;7660:::-;7699:7;7728:20;7742:5;7728:20;:::i;:::-;7717:31;;7660:94;;;:::o;7760:100::-;7799:7;7828:26;7848:5;7828:26;:::i;:::-;7817:37;;7760:100;;;:::o;7866:157::-;7971:45;7991:24;8009:5;7991:24;:::i;:::-;7971:45;:::i;:::-;7966:3;7959:58;7866:157;;:::o;8029:397::-;8169:3;8184:75;8255:3;8246:6;8184:75;:::i;:::-;8284:2;8279:3;8275:12;8268:19;;8297:75;8368:3;8359:6;8297:75;:::i;:::-;8397:2;8392:3;8388:12;8381:19;;8417:3;8410:10;;8029:397;;;;;:::o;8432:332::-;8553:4;8591:2;8580:9;8576:18;8568:26;;8604:71;8672:1;8661:9;8657:17;8648:6;8604:71;:::i;:::-;8685:72;8753:2;8742:9;8738:18;8729:6;8685:72;:::i;:::-;8432:332;;;;;:::o;8770:::-;8891:4;8929:2;8918:9;8914:18;8906:26;;8942:71;9010:1;8999:9;8995:17;8986:6;8942:71;:::i;:::-;9023:72;9091:2;9080:9;9076:18;9067:6;9023:72;:::i;:::-;8770:332;;;;;:::o",
  "source": "pragma solidity >=0.8.13;\n\nimport './interfaces/IAdaswapFactory.sol';\nimport './AdaswapPair.sol';\n\ncontract AdaswapFactory is IAdaswapFactory {\n    address public feeTo;\n    address public feeToSetter;\n\n    mapping(address => mapping(address => address)) public getPair;\n    address[] public allPairs;\n\n    constructor(address _feeToSetter) {\n        feeToSetter = _feeToSetter;\n    }\n\n    function allPairsLength() external view returns (uint) {\n        return allPairs.length;\n    }\n\n    function pairCodeHash() external pure returns (bytes32) {\n        return keccak256(type(AdaswapPair).creationCode);\n    }\n\n    function createPair(address tokenA, address tokenB) external returns (address pair) {\n        require(tokenA != tokenB, 'Adaswap: IDENTICAL_ADDRESSES');\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n        require(token0 != address(0), 'Adaswap: ZERO_ADDRESS');\n        require(getPair[token0][token1] == address(0), 'Adaswap: PAIR_EXISTS'); // single check is sufficient\n        bytes memory bytecode = type(AdaswapPair).creationCode;\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\n        assembly {\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\n        }\n        IAdaswapPair(pair).initialize(token0, token1);\n        getPair[token0][token1] = pair;\n        getPair[token1][token0] = pair; // populate mapping in the reverse direction\n        allPairs.push(pair);\n        emit PairCreated(token0, token1, pair, allPairs.length);\n    }\n\n    function setFeeTo(address _feeTo) external {\n        require(msg.sender == feeToSetter, 'Adaswap: FORBIDDEN');\n        feeTo = _feeTo;\n    }\n\n    function setFeeToSetter(address _feeToSetter) external {\n        require(msg.sender == feeToSetter, 'Adaswap: FORBIDDEN');\n        feeToSetter = _feeToSetter;\n    }\n}\n",
  "sourcePath": "/home/dung/workspace/adaswap/core/contracts/AdaswapFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/AdaswapFactory.sol",
    "exportedSymbols": {
      "AdaswapERC20": [
        456
      ],
      "AdaswapFactory": [
        656
      ],
      "AdaswapPair": [
        1689
      ],
      "IAdaswapCallee": [
        1703
      ],
      "IAdaswapERC20": [
        1743
      ],
      "IAdaswapFactory": [
        1806
      ],
      "IAdaswapPair": [
        1936
      ],
      "IERC20": [
        80
      ],
      "Math": [
        2015
      ],
      "SafeMath": [
        2090
      ],
      "UQ112x112": [
        2134
      ]
    },
    "id": 657,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 458,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:25:3"
      },
      {
        "absolutePath": "project:/contracts/interfaces/IAdaswapFactory.sol",
        "file": "./interfaces/IAdaswapFactory.sol",
        "id": 459,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 657,
        "sourceUnit": 1807,
        "src": "27:42:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/AdaswapPair.sol",
        "file": "./AdaswapPair.sol",
        "id": 460,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 657,
        "sourceUnit": 1690,
        "src": "70:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 461,
              "name": "IAdaswapFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1806,
              "src": "126:15:3"
            },
            "id": 462,
            "nodeType": "InheritanceSpecifier",
            "src": "126:15:3"
          }
        ],
        "canonicalName": "AdaswapFactory",
        "contractDependencies": [
          1689
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 656,
        "linearizedBaseContracts": [
          656,
          1806
        ],
        "name": "AdaswapFactory",
        "nameLocation": "108:14:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              1760
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 464,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "163:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 656,
            "src": "148:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 463,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "148:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1765
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 466,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "189:11:3",
            "nodeType": "VariableDeclaration",
            "scope": 656,
            "src": "174:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 465,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "174:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1774
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 472,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "262:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 656,
            "src": "207:62:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 471,
              "keyType": {
                "id": 467,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "215:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "207:47:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 470,
                "keyType": {
                  "id": 468,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "234:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "226:27:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 469,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "245:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1781
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 475,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "292:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 656,
            "src": "275:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 473,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "275:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 474,
              "nodeType": "ArrayTypeName",
              "src": "275:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 484,
              "nodeType": "Block",
              "src": "341:43:3",
              "statements": [
                {
                  "expression": {
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 480,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 466,
                      "src": "351:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 481,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 477,
                      "src": "365:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "351:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 483,
                  "nodeType": "ExpressionStatement",
                  "src": "351:26:3"
                }
              ]
            },
            "id": 485,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 477,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "327:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 485,
                  "src": "319:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "319:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "318:22:3"
            },
            "returnParameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "341:0:3"
            },
            "scope": 656,
            "src": "307:77:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1786
            ],
            "body": {
              "id": 493,
              "nodeType": "Block",
              "src": "445:39:3",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 490,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 475,
                      "src": "462:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "462:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 489,
                  "id": 492,
                  "nodeType": "Return",
                  "src": "455:22:3"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 494,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "399:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "413:2:3"
            },
            "returnParameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 488,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 494,
                  "src": "439:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 487,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "439:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "438:6:3"
            },
            "scope": 656,
            "src": "390:94:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 506,
              "nodeType": "Block",
              "src": "546:65:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 501,
                              "name": "AdaswapPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1689,
                              "src": "578:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_AdaswapPair_$1689_$",
                                "typeString": "type(contract AdaswapPair)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_AdaswapPair_$1689_$",
                                "typeString": "type(contract AdaswapPair)"
                              }
                            ],
                            "id": 500,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967269,
                            "src": "573:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "573:17:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_AdaswapPair_$1689",
                            "typeString": "type(contract AdaswapPair)"
                          }
                        },
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "creationCode",
                        "nodeType": "MemberAccess",
                        "src": "573:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 499,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "563:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "563:41:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 498,
                  "id": 505,
                  "nodeType": "Return",
                  "src": "556:48:3"
                }
              ]
            },
            "functionSelector": "9aab9248",
            "id": 507,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pairCodeHash",
            "nameLocation": "499:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "511:2:3"
            },
            "returnParameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 497,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 507,
                  "src": "537:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 496,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "537:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "536:9:3"
            },
            "scope": 656,
            "src": "490:121:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1795
            ],
            "body": {
              "id": 618,
              "nodeType": "Block",
              "src": "701:854:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 517,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 509,
                          "src": "719:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 518,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 511,
                          "src": "729:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "719:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416461737761703a204944454e544943414c5f414444524553534553",
                        "id": 520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "737:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e592ee48390aadd631d40d00a1f789505cfdd3d26a664bd51dd83da4f8e4bcb",
                          "typeString": "literal_string \"Adaswap: IDENTICAL_ADDRESSES\""
                        },
                        "value": "Adaswap: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e592ee48390aadd631d40d00a1f789505cfdd3d26a664bd51dd83da4f8e4bcb",
                          "typeString": "literal_string \"Adaswap: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 516,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "711:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "711:57:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 522,
                  "nodeType": "ExpressionStatement",
                  "src": "711:57:3"
                },
                {
                  "assignments": [
                    524,
                    526
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 524,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "787:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 618,
                      "src": "779:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 523,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "779:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 526,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "803:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 618,
                      "src": "795:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 525,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "795:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 537,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 527,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 509,
                        "src": "813:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 528,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 511,
                        "src": "822:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "813:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 533,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 511,
                          "src": "851:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 534,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 509,
                          "src": "859:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 535,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "850:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "813:53:3",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 530,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 509,
                          "src": "832:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 531,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 511,
                          "src": "840:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 532,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "831:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "778:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 539,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 524,
                          "src": "884:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "902:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "894:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 540,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "894:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "894:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "884:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416461737761703a205a45524f5f41444452455353",
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "906:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f6f2dc0e36b0c951761caa403fc689363e2e509b3488cce8a750bac42ced155",
                          "typeString": "literal_string \"Adaswap: ZERO_ADDRESS\""
                        },
                        "value": "Adaswap: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f6f2dc0e36b0c951761caa403fc689363e2e509b3488cce8a750bac42ced155",
                          "typeString": "literal_string \"Adaswap: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "876:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "876:54:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 547,
                  "nodeType": "ExpressionStatement",
                  "src": "876:54:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 549,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 472,
                              "src": "948:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 551,
                            "indexExpression": {
                              "id": 550,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 524,
                              "src": "956:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "948:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 553,
                          "indexExpression": {
                            "id": 552,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 526,
                            "src": "964:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "948:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "983:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 555,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "975:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 554,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "975:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "975:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "948:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416461737761703a20504149525f455849535453",
                        "id": 559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "987:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03b34a24c4e362bea9a181b18b59e7cae31bae5ae125459064f34e608edd60e2",
                          "typeString": "literal_string \"Adaswap: PAIR_EXISTS\""
                        },
                        "value": "Adaswap: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03b34a24c4e362bea9a181b18b59e7cae31bae5ae125459064f34e608edd60e2",
                          "typeString": "literal_string \"Adaswap: PAIR_EXISTS\""
                        }
                      ],
                      "id": 548,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "940:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "940:70:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 561,
                  "nodeType": "ExpressionStatement",
                  "src": "940:70:3"
                },
                {
                  "assignments": [
                    563
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 563,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1063:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 618,
                      "src": "1050:21:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 562,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1050:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 568,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 565,
                          "name": "AdaswapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1689,
                          "src": "1079:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AdaswapPair_$1689_$",
                            "typeString": "type(contract AdaswapPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_AdaswapPair_$1689_$",
                            "typeString": "type(contract AdaswapPair)"
                          }
                        ],
                        "id": 564,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1074:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1074:17:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_AdaswapPair_$1689",
                        "typeString": "type(contract AdaswapPair)"
                      }
                    },
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1074:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1050:54:3"
                },
                {
                  "assignments": [
                    570
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 570,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1122:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 618,
                      "src": "1114:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 569,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1114:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 578,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 574,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 524,
                            "src": "1156:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 575,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 526,
                            "src": "1164:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 572,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1139:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1139:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1139:32:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 571,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1129:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1129:43:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1114:58:3"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1191:84:3",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1205:60:3",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1221:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1228:8:3"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1238:2:3",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1224:3:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1224:17:3"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1249:8:3"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1243:5:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1243:15:3"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1260:4:3"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1213:7:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1213:52:3"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1205:4:3"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 563,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1228:8:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 563,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1249:8:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 514,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1205:4:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 570,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1260:4:3",
                      "valueSize": 1
                    }
                  ],
                  "id": 579,
                  "nodeType": "InlineAssembly",
                  "src": "1182:93:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 584,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 524,
                        "src": "1314:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 585,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 526,
                        "src": "1322:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 581,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 514,
                            "src": "1297:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 580,
                          "name": "IAdaswapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1936,
                          "src": "1284:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IAdaswapPair_$1936_$",
                            "typeString": "type(contract IAdaswapPair)"
                          }
                        },
                        "id": 582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1284:18:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAdaswapPair_$1936",
                          "typeString": "contract IAdaswapPair"
                        }
                      },
                      "id": 583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1935,
                      "src": "1284:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1284:45:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 587,
                  "nodeType": "ExpressionStatement",
                  "src": "1284:45:3"
                },
                {
                  "expression": {
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 588,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 472,
                          "src": "1339:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 591,
                        "indexExpression": {
                          "id": 589,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 524,
                          "src": "1347:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1339:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 592,
                      "indexExpression": {
                        "id": 590,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 526,
                        "src": "1355:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1339:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 593,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 514,
                      "src": "1365:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1339:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 595,
                  "nodeType": "ExpressionStatement",
                  "src": "1339:30:3"
                },
                {
                  "expression": {
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 596,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 472,
                          "src": "1379:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 599,
                        "indexExpression": {
                          "id": 597,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 526,
                          "src": "1387:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1379:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 600,
                      "indexExpression": {
                        "id": 598,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 524,
                        "src": "1395:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1379:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 601,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 514,
                      "src": "1405:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1379:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 603,
                  "nodeType": "ExpressionStatement",
                  "src": "1379:30:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 607,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 514,
                        "src": "1478:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 604,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 475,
                        "src": "1464:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1464:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1464:19:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 609,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:19:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 611,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 524,
                        "src": "1510:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 612,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 526,
                        "src": "1518:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 613,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 514,
                        "src": "1526:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 614,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 475,
                          "src": "1532:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1532:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 610,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1755,
                      "src": "1498:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1498:50:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 617,
                  "nodeType": "EmitStatement",
                  "src": "1493:55:3"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 619,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "626:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 509,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "645:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 619,
                  "src": "637:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 508,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "637:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 511,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "661:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 619,
                  "src": "653:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "653:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "636:32:3"
            },
            "returnParameters": {
              "id": 515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 514,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "695:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 619,
                  "src": "687:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "687:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "686:14:3"
            },
            "scope": 656,
            "src": "617:938:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1800
            ],
            "body": {
              "id": 636,
              "nodeType": "Block",
              "src": "1604:97:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 625,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1622:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1622:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 627,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 466,
                          "src": "1636:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1622:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416461737761703a20464f5242494444454e",
                        "id": 629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1649:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7072da1bf1dd8947b7fc33fa60cc47eaf8841525d4ece956440be60d226530a1",
                          "typeString": "literal_string \"Adaswap: FORBIDDEN\""
                        },
                        "value": "Adaswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7072da1bf1dd8947b7fc33fa60cc47eaf8841525d4ece956440be60d226530a1",
                          "typeString": "literal_string \"Adaswap: FORBIDDEN\""
                        }
                      ],
                      "id": 624,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1614:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1614:56:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 631,
                  "nodeType": "ExpressionStatement",
                  "src": "1614:56:3"
                },
                {
                  "expression": {
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 632,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 464,
                      "src": "1680:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 633,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 621,
                      "src": "1688:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1680:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 635,
                  "nodeType": "ExpressionStatement",
                  "src": "1680:14:3"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 637,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1570:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 621,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1587:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "1579:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1579:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1578:16:3"
            },
            "returnParameters": {
              "id": 623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1604:0:3"
            },
            "scope": 656,
            "src": "1561:140:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1805
            ],
            "body": {
              "id": 654,
              "nodeType": "Block",
              "src": "1762:109:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 643,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1780:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1780:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 645,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 466,
                          "src": "1794:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1780:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416461737761703a20464f5242494444454e",
                        "id": 647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1807:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7072da1bf1dd8947b7fc33fa60cc47eaf8841525d4ece956440be60d226530a1",
                          "typeString": "literal_string \"Adaswap: FORBIDDEN\""
                        },
                        "value": "Adaswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7072da1bf1dd8947b7fc33fa60cc47eaf8841525d4ece956440be60d226530a1",
                          "typeString": "literal_string \"Adaswap: FORBIDDEN\""
                        }
                      ],
                      "id": 642,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1772:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1772:56:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 649,
                  "nodeType": "ExpressionStatement",
                  "src": "1772:56:3"
                },
                {
                  "expression": {
                    "id": 652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 650,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 466,
                      "src": "1838:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 651,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 639,
                      "src": "1852:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1838:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 653,
                  "nodeType": "ExpressionStatement",
                  "src": "1838:26:3"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 655,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1716:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 639,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1739:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "1731:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1731:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1730:22:3"
            },
            "returnParameters": {
              "id": 641,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1762:0:3"
            },
            "scope": 656,
            "src": "1707:164:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 657,
        "src": "99:1774:3",
        "usedErrors": []
      }
    ],
    "src": "0:1874:3"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/AdaswapFactory.sol",
    "exportedSymbols": {
      "AdaswapERC20": [
        456
      ],
      "AdaswapFactory": [
        656
      ],
      "AdaswapPair": [
        1689
      ],
      "IAdaswapCallee": [
        1703
      ],
      "IAdaswapERC20": [
        1743
      ],
      "IAdaswapFactory": [
        1806
      ],
      "IAdaswapPair": [
        1936
      ],
      "IERC20": [
        80
      ],
      "Math": [
        2015
      ],
      "SafeMath": [
        2090
      ],
      "UQ112x112": [
        2134
      ]
    },
    "id": 657,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 458,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:25:3"
      },
      {
        "absolutePath": "project:/contracts/interfaces/IAdaswapFactory.sol",
        "file": "./interfaces/IAdaswapFactory.sol",
        "id": 459,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 657,
        "sourceUnit": 1807,
        "src": "27:42:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/AdaswapPair.sol",
        "file": "./AdaswapPair.sol",
        "id": 460,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 657,
        "sourceUnit": 1690,
        "src": "70:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 461,
              "name": "IAdaswapFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1806,
              "src": "126:15:3"
            },
            "id": 462,
            "nodeType": "InheritanceSpecifier",
            "src": "126:15:3"
          }
        ],
        "canonicalName": "AdaswapFactory",
        "contractDependencies": [
          1689
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 656,
        "linearizedBaseContracts": [
          656,
          1806
        ],
        "name": "AdaswapFactory",
        "nameLocation": "108:14:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              1760
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 464,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "163:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 656,
            "src": "148:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 463,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "148:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1765
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 466,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "189:11:3",
            "nodeType": "VariableDeclaration",
            "scope": 656,
            "src": "174:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 465,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "174:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1774
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 472,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "262:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 656,
            "src": "207:62:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 471,
              "keyType": {
                "id": 467,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "215:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "207:47:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 470,
                "keyType": {
                  "id": 468,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "234:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "226:27:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 469,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "245:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1781
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 475,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "292:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 656,
            "src": "275:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 473,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "275:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 474,
              "nodeType": "ArrayTypeName",
              "src": "275:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 484,
              "nodeType": "Block",
              "src": "341:43:3",
              "statements": [
                {
                  "expression": {
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 480,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 466,
                      "src": "351:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 481,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 477,
                      "src": "365:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "351:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 483,
                  "nodeType": "ExpressionStatement",
                  "src": "351:26:3"
                }
              ]
            },
            "id": 485,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 477,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "327:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 485,
                  "src": "319:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "319:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "318:22:3"
            },
            "returnParameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "341:0:3"
            },
            "scope": 656,
            "src": "307:77:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1786
            ],
            "body": {
              "id": 493,
              "nodeType": "Block",
              "src": "445:39:3",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 490,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 475,
                      "src": "462:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "462:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 489,
                  "id": 492,
                  "nodeType": "Return",
                  "src": "455:22:3"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 494,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "399:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "413:2:3"
            },
            "returnParameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 488,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 494,
                  "src": "439:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 487,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "439:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "438:6:3"
            },
            "scope": 656,
            "src": "390:94:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 506,
              "nodeType": "Block",
              "src": "546:65:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 501,
                              "name": "AdaswapPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1689,
                              "src": "578:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_AdaswapPair_$1689_$",
                                "typeString": "type(contract AdaswapPair)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_AdaswapPair_$1689_$",
                                "typeString": "type(contract AdaswapPair)"
                              }
                            ],
                            "id": 500,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967269,
                            "src": "573:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "573:17:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_AdaswapPair_$1689",
                            "typeString": "type(contract AdaswapPair)"
                          }
                        },
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "creationCode",
                        "nodeType": "MemberAccess",
                        "src": "573:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 499,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "563:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "563:41:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 498,
                  "id": 505,
                  "nodeType": "Return",
                  "src": "556:48:3"
                }
              ]
            },
            "functionSelector": "9aab9248",
            "id": 507,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pairCodeHash",
            "nameLocation": "499:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "511:2:3"
            },
            "returnParameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 497,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 507,
                  "src": "537:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 496,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "537:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "536:9:3"
            },
            "scope": 656,
            "src": "490:121:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1795
            ],
            "body": {
              "id": 618,
              "nodeType": "Block",
              "src": "701:854:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 517,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 509,
                          "src": "719:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 518,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 511,
                          "src": "729:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "719:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416461737761703a204944454e544943414c5f414444524553534553",
                        "id": 520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "737:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e592ee48390aadd631d40d00a1f789505cfdd3d26a664bd51dd83da4f8e4bcb",
                          "typeString": "literal_string \"Adaswap: IDENTICAL_ADDRESSES\""
                        },
                        "value": "Adaswap: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e592ee48390aadd631d40d00a1f789505cfdd3d26a664bd51dd83da4f8e4bcb",
                          "typeString": "literal_string \"Adaswap: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 516,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "711:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "711:57:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 522,
                  "nodeType": "ExpressionStatement",
                  "src": "711:57:3"
                },
                {
                  "assignments": [
                    524,
                    526
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 524,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "787:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 618,
                      "src": "779:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 523,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "779:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 526,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "803:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 618,
                      "src": "795:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 525,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "795:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 537,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 527,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 509,
                        "src": "813:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 528,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 511,
                        "src": "822:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "813:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 533,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 511,
                          "src": "851:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 534,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 509,
                          "src": "859:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 535,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "850:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "813:53:3",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 530,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 509,
                          "src": "832:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 531,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 511,
                          "src": "840:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 532,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "831:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "778:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 539,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 524,
                          "src": "884:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "902:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "894:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 540,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "894:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "894:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "884:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416461737761703a205a45524f5f41444452455353",
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "906:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f6f2dc0e36b0c951761caa403fc689363e2e509b3488cce8a750bac42ced155",
                          "typeString": "literal_string \"Adaswap: ZERO_ADDRESS\""
                        },
                        "value": "Adaswap: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f6f2dc0e36b0c951761caa403fc689363e2e509b3488cce8a750bac42ced155",
                          "typeString": "literal_string \"Adaswap: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "876:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "876:54:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 547,
                  "nodeType": "ExpressionStatement",
                  "src": "876:54:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 549,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 472,
                              "src": "948:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 551,
                            "indexExpression": {
                              "id": 550,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 524,
                              "src": "956:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "948:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 553,
                          "indexExpression": {
                            "id": 552,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 526,
                            "src": "964:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "948:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "983:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 555,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "975:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 554,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "975:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "975:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "948:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416461737761703a20504149525f455849535453",
                        "id": 559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "987:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03b34a24c4e362bea9a181b18b59e7cae31bae5ae125459064f34e608edd60e2",
                          "typeString": "literal_string \"Adaswap: PAIR_EXISTS\""
                        },
                        "value": "Adaswap: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03b34a24c4e362bea9a181b18b59e7cae31bae5ae125459064f34e608edd60e2",
                          "typeString": "literal_string \"Adaswap: PAIR_EXISTS\""
                        }
                      ],
                      "id": 548,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "940:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "940:70:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 561,
                  "nodeType": "ExpressionStatement",
                  "src": "940:70:3"
                },
                {
                  "assignments": [
                    563
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 563,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1063:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 618,
                      "src": "1050:21:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 562,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1050:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 568,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 565,
                          "name": "AdaswapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1689,
                          "src": "1079:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AdaswapPair_$1689_$",
                            "typeString": "type(contract AdaswapPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_AdaswapPair_$1689_$",
                            "typeString": "type(contract AdaswapPair)"
                          }
                        ],
                        "id": 564,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1074:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1074:17:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_AdaswapPair_$1689",
                        "typeString": "type(contract AdaswapPair)"
                      }
                    },
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1074:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1050:54:3"
                },
                {
                  "assignments": [
                    570
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 570,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1122:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 618,
                      "src": "1114:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 569,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1114:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 578,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 574,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 524,
                            "src": "1156:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 575,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 526,
                            "src": "1164:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 572,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1139:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1139:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1139:32:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 571,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1129:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1129:43:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1114:58:3"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1191:84:3",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1205:60:3",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1221:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1228:8:3"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1238:2:3",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1224:3:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1224:17:3"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1249:8:3"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1243:5:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1243:15:3"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1260:4:3"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1213:7:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1213:52:3"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1205:4:3"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 563,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1228:8:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 563,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1249:8:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 514,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1205:4:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 570,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1260:4:3",
                      "valueSize": 1
                    }
                  ],
                  "id": 579,
                  "nodeType": "InlineAssembly",
                  "src": "1182:93:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 584,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 524,
                        "src": "1314:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 585,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 526,
                        "src": "1322:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 581,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 514,
                            "src": "1297:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 580,
                          "name": "IAdaswapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1936,
                          "src": "1284:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IAdaswapPair_$1936_$",
                            "typeString": "type(contract IAdaswapPair)"
                          }
                        },
                        "id": 582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1284:18:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAdaswapPair_$1936",
                          "typeString": "contract IAdaswapPair"
                        }
                      },
                      "id": 583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1935,
                      "src": "1284:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1284:45:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 587,
                  "nodeType": "ExpressionStatement",
                  "src": "1284:45:3"
                },
                {
                  "expression": {
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 588,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 472,
                          "src": "1339:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 591,
                        "indexExpression": {
                          "id": 589,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 524,
                          "src": "1347:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1339:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 592,
                      "indexExpression": {
                        "id": 590,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 526,
                        "src": "1355:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1339:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 593,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 514,
                      "src": "1365:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1339:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 595,
                  "nodeType": "ExpressionStatement",
                  "src": "1339:30:3"
                },
                {
                  "expression": {
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 596,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 472,
                          "src": "1379:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 599,
                        "indexExpression": {
                          "id": 597,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 526,
                          "src": "1387:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1379:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 600,
                      "indexExpression": {
                        "id": 598,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 524,
                        "src": "1395:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1379:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 601,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 514,
                      "src": "1405:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1379:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 603,
                  "nodeType": "ExpressionStatement",
                  "src": "1379:30:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 607,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 514,
                        "src": "1478:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 604,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 475,
                        "src": "1464:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1464:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1464:19:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 609,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:19:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 611,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 524,
                        "src": "1510:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 612,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 526,
                        "src": "1518:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 613,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 514,
                        "src": "1526:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 614,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 475,
                          "src": "1532:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1532:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 610,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1755,
                      "src": "1498:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1498:50:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 617,
                  "nodeType": "EmitStatement",
                  "src": "1493:55:3"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 619,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "626:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 509,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "645:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 619,
                  "src": "637:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 508,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "637:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 511,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "661:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 619,
                  "src": "653:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "653:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "636:32:3"
            },
            "returnParameters": {
              "id": 515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 514,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "695:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 619,
                  "src": "687:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "687:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "686:14:3"
            },
            "scope": 656,
            "src": "617:938:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1800
            ],
            "body": {
              "id": 636,
              "nodeType": "Block",
              "src": "1604:97:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 625,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1622:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1622:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 627,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 466,
                          "src": "1636:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1622:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416461737761703a20464f5242494444454e",
                        "id": 629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1649:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7072da1bf1dd8947b7fc33fa60cc47eaf8841525d4ece956440be60d226530a1",
                          "typeString": "literal_string \"Adaswap: FORBIDDEN\""
                        },
                        "value": "Adaswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7072da1bf1dd8947b7fc33fa60cc47eaf8841525d4ece956440be60d226530a1",
                          "typeString": "literal_string \"Adaswap: FORBIDDEN\""
                        }
                      ],
                      "id": 624,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1614:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1614:56:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 631,
                  "nodeType": "ExpressionStatement",
                  "src": "1614:56:3"
                },
                {
                  "expression": {
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 632,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 464,
                      "src": "1680:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 633,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 621,
                      "src": "1688:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1680:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 635,
                  "nodeType": "ExpressionStatement",
                  "src": "1680:14:3"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 637,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1570:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 621,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1587:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "1579:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1579:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1578:16:3"
            },
            "returnParameters": {
              "id": 623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1604:0:3"
            },
            "scope": 656,
            "src": "1561:140:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1805
            ],
            "body": {
              "id": 654,
              "nodeType": "Block",
              "src": "1762:109:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 643,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1780:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1780:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 645,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 466,
                          "src": "1794:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1780:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416461737761703a20464f5242494444454e",
                        "id": 647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1807:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7072da1bf1dd8947b7fc33fa60cc47eaf8841525d4ece956440be60d226530a1",
                          "typeString": "literal_string \"Adaswap: FORBIDDEN\""
                        },
                        "value": "Adaswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7072da1bf1dd8947b7fc33fa60cc47eaf8841525d4ece956440be60d226530a1",
                          "typeString": "literal_string \"Adaswap: FORBIDDEN\""
                        }
                      ],
                      "id": 642,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1772:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1772:56:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 649,
                  "nodeType": "ExpressionStatement",
                  "src": "1772:56:3"
                },
                {
                  "expression": {
                    "id": 652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 650,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 466,
                      "src": "1838:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 651,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 639,
                      "src": "1852:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1838:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 653,
                  "nodeType": "ExpressionStatement",
                  "src": "1838:26:3"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 655,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1716:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 639,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1739:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "1731:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1731:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1730:22:3"
            },
            "returnParameters": {
              "id": 641,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1762:0:3"
            },
            "scope": 656,
            "src": "1707:164:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 657,
        "src": "99:1774:3",
        "usedErrors": []
      }
    ],
    "src": "0:1874:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {
    "200101": {
      "events": {},
      "links": {},
      "address": "0xf2Fe389a25eD1c98cEf93B624c59e299433057Ee",
      "transactionHash": "0xd0dd005a6b78629804160314e30c1982f62a69e75d805e682b33b045f3f092ab"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-06-07T11:48:56.256Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}